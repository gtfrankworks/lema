import{a as e,c as m,b as s,d as t,f as n,o as r}from"./app-ZQgO6-gU.js";const l="/lema/images/db/mg/mg2.png",d={};function p(i,a){return r(),m("div",null,a[0]||(a[0]=[s(`<h2 id="查询和映射" tabindex="-1"><a class="header-anchor" href="#查询和映射"><span>查询和映射</span></a></h2><h4 id="比较查询" tabindex="-1"><a class="header-anchor" href="#比较查询"><span>比较查询</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$eq</td><td>等于</td></tr><tr><td>$ne</td><td>不等于</td></tr><tr><td>$gt</td><td>大于</td></tr><tr><td>$gte</td><td>大于等于</td></tr><tr><td>$lt</td><td>小于</td></tr><tr><td>$lte</td><td>小于等于</td></tr><tr><td>$in</td><td>等于数组中某个值</td></tr><tr><td>$nin</td><td>不等于数组中任意值</td></tr></tbody></table><blockquote><p>注意：<br> 对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><mtext>和</mtext></mrow><annotation encoding="application/x-tex">in和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">in</span><span class="mord cjk_fallback">和</span></span></span></span>nin来说，数组里匹配的值还可以是正则表达式，例如：db.users.find({name:{$in:[/x/,/^p/]}}） 找出名字中有字母x或以字母p为开头的数据</p><p>对于<span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;}&#39;, got &#39;EOF&#39; at end of input: …ers.find({age:{" style="color:#cc0000;">nin来说，如果检测的属性本身不存在，则会返回该条数据。例如：db.users.find({age:{</span>nin:[18]}}) 如果age属性根本就不存在，也就意味着age的值不会为18，因此会返回所有数据</p></blockquote><h4 id="逻辑查询" tabindex="-1"><a class="header-anchor" href="#逻辑查询"><span>逻辑查询</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$and</td><td>逻辑与，数组中所有表达式必须都成立</td></tr><tr><td>$not</td><td>逻辑非，数组中表达式都不成立或要对比的属性本身不存在</td></tr><tr><td>$nor</td><td>逻辑或的取反，数组中表达式中任何一个都不成立</td></tr><tr><td>$or</td><td>逻辑或，数组中表达式任何一个成立即可</td></tr></tbody></table><blockquote><p>注意：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>d</mi><mtext>执行短路查询，即若数组中前面表达式不成立，则不会继续剩余表达式的运算</mtext></mrow><annotation encoding="application/x-tex">and 执行短路查询，即若数组中前面表达式不成立，则不会继续剩余表达式的运算 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">执行短路查询，即若数组中前面表达式不成立，则不会继续剩余表达式的运算</span></span></span></span>not 若对比属性本身不存在，运行结果也视为成立<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>o</mi><mi>r</mi><mtext>不可以单独使用</mtext></mrow><annotation encoding="application/x-tex">nor 不可以单独使用</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord cjk_fallback">不可以单独使用</span></span></span></span>nor，$nor必须配合[]，[]包含其他查询才可以使用。</p></blockquote><h4 id="元素查询" tabindex="-1"><a class="header-anchor" href="#元素查询"><span>元素查询</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$exists</td><td>属性是否存在，哪怕该属性值为null或undefined(事实上undefined类型值已经被废弃)</td></tr><tr><td>$type</td><td>属性值类型，如果属性值是数组则判断数组每一项是否是该类型</td></tr></tbody></table><blockquote><p>注意<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>s</mi><mtext>只存在</mtext><mn>2</mn><mtext>个值，</mtext></mrow><annotation encoding="application/x-tex">exists 只存在2个值，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord cjk_fallback">只存在</span><span class="mord">2</span><span class="mord cjk_fallback">个值，</span></span></span></span>exists:true 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>s</mi><mo>:</mo><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">exists:false </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span></span></span></span>type 对应的值可以有2种表现形式：类型对应的字符串 或 类型对应的数字编号</p><p>如果有一条数据为 {&#39;_id&#39;:1,&#39;zipcode&#39;:[&#39;450000&#39;,&#39;450022&#39;]} 那么<br> db.address.find({zipcode:{$type:&#39;string&#39;}}) 由于zipcode属性值为array，则会对数组每一项进行类型匹配，因此是可以命中该条数据的。</p></blockquote><table><thead><tr><th>类型</th><th>含义</th><th>数字编号</th><th>别名(字符串)</th><th>备注</th></tr></thead><tbody><tr><td>Double</td><td>双精度浮点数(整数或小数)</td><td>1</td><td>&#39;double&#39;</td><td></td></tr><tr><td>String</td><td>字符串</td><td>2</td><td>&#39;string&#39;</td><td></td></tr><tr><td>Object</td><td>对象</td><td>3</td><td>&#39;object&#39;</td><td></td></tr><tr><td>Array</td><td>数组</td><td>4</td><td>&#39;array&#39;</td><td></td></tr><tr><td>Binary data</td><td>二进制数据</td><td>5</td><td>binData</td><td></td></tr><tr><td>Undefined</td><td>未定义</td><td>6</td><td>&#39;undefined&#39;</td><td>已废弃</td></tr><tr><td>ObjectId</td><td>MongoDB自动生成的_id</td><td>7</td><td>&#39;objectId&#39;</td><td></td></tr><tr><td>Boolean</td><td>布尔值</td><td>8</td><td>&#39;bool&#39;</td><td></td></tr><tr><td>Date</td><td>日期(unix格式)</td><td>9</td><td>&#39;date&#39;</td><td></td></tr><tr><td>Null</td><td>非任何有效值</td><td>10</td><td>&#39;null&#39;</td><td></td></tr><tr><td>Regullar Expression</td><td>正则表达式</td><td>11</td><td>&#39;regex&#39;</td><td></td></tr><tr><td>DBPointer</td><td>/</td><td>12</td><td>&#39;dbPointer&#39;</td><td>已废弃</td></tr><tr><td>JavaScript</td><td>JS代码</td><td>13</td><td>&#39;javascript&#39;</td><td></td></tr><tr><td>Symbol</td><td>符号</td><td>14</td><td>&#39;symbol&#39;</td><td>已废弃</td></tr><tr><td>JavaScript(with scope)</td><td>带作用域的JS代码</td><td>15</td><td>&#39;javascriptWithScope&#39;</td><td></td></tr><tr><td>32-bit integer</td><td>32为整数</td><td>16</td><td>&#39;int&#39;</td><td></td></tr><tr><td>Timestamp</td><td>时间戳(数字)</td><td>17</td><td>&#39;timestamp&#39;</td><td></td></tr><tr><td>64-bit integer</td><td>64位整数</td><td>18</td><td>&#39;long&#39;</td><td></td></tr><tr><td>Decimal128</td><td>高精度小数</td><td>19</td><td>&#39;decimal&#39;</td><td></td></tr><tr><td>Min key</td><td>最小键</td><td>-1</td><td>&#39;minKey&#39;</td><td></td></tr><tr><td>Max key</td><td>最大键</td><td>127</td><td>&#39;maxKey&#39;</td><td></td></tr></tbody></table><blockquote><p>例如 String 对应的编号数字为2，别名为&#39;string&#39; 因此：<br> db.address.find({zipcode:{<span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;EOF&#39;, got &#39;}&#39; at position 7: type:2}̲})  
等同于  
db.a…" style="color:#cc0000;">type:2}}) 等同于 db.address.find({zipcode:{</span>type:&#39;string&#39;}})</p></blockquote><br><p>关于数字精度的知识补充：</p><table><thead><tr><th>类型</th><th>含义</th><th>补充</th></tr></thead><tbody><tr><td>float</td><td>单精度浮点数 32位二进制储存</td><td>MongoDB中不存在此类型</td></tr><tr><td>double</td><td>双精度浮点数 64位二进制储存</td><td>MongoDB中对应类型为Double</td></tr><tr><td>decimal</td><td>高精度浮点数 128位二进制储存</td><td>MongoDB中对应类型为Decimal128</td></tr></tbody></table><blockquote><p>注意：<br> 浮点数计算结果并不精确，例如 0.3 - 0.2 = 0.0999999999<br> 对于计算机来说，数字类型精度越高 运算速度越慢。</p></blockquote><br><p>关于ObjectID的知识补充：<br> MongoDB默认自动生成的_id格式遵循以下规则：</p><ul><li>前 4 个字节为时间戳中的秒</li><li>中间 5 个字节为一个随机数(事实上并不真的是随机数，前3个字节为机器标识码，后2个字节为进程pid)</li><li>后 3 个字节为 一个累加的计数器数字，起始值并不是 0 而是一个随机数</li></ul><p>假设某_id值为 &#39;5ecdf8e67c9b393daa572f6e&#39;<br> 该字符串长度24，是 24位16进制数，实际占用12个字节储存空间。</p><blockquote><p>注意，批量写入数据时：</p><ul><li>前4个字节对应 时间戳中的秒 可能相同</li><li>中间5个字节(3个字节机器标识码和2个字节进程pid) 也可能相同</li><li>后3个字节对应的 累加计数 肯定不同。 由于累加计数器初始值并不一定是从0开始，所以理论上无法通过后3个字节对应的数字大小来判断写入数据库的先后顺序</li></ul></blockquote><h4 id="评价查询" tabindex="-1"><a class="header-anchor" href="#评价查询"><span>评价查询</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$expr</td><td>允许使用聚合表达式</td></tr><tr><td>$jsonSchema</td><td>根据给定的JSON结构格式验证文档，限定数据类型</td></tr><tr><td>$mod</td><td>根据给定的2个参数来取余</td></tr><tr><td>$regex</td><td>匹配出符合正则表达式的数据</td></tr><tr><td>$text</td><td>根据指定的规则，进行文本搜索</td></tr><tr><td>$where</td><td>匹配符合JavaScript表达式(或函数)的数据</td></tr></tbody></table><blockquote><p>注意：<br><span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;}&#39;, got &#39;EOF&#39; at end of input: …db.users.find({" style="color:#cc0000;">expr 所谓允许使用聚合表达式，意思就是让原本不支持聚合查询的函数可以使用聚合查询，例如find()。举例： db.users.find({</span>expr:{<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>t</mi><mo>:</mo><msup><mo stretchy="false">[</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">gt:[&#39;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen"><span class="mopen">[</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>yingyu&#39;,&#39;$shuxue&#39;]}})</p><p>$jsonSchema中验证的JSON文档结构需要使用特定的书写规范，而具体规范此处暂时不做深究。</p><p><span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;}&#39;, got &#39;EOF&#39; at end of input: …个为除数，第2个为余数。例如{" style="color:#cc0000;">mod 的两个参数，第1个为除数，第2个为余数。例如{</span>mod:[4,1]}即表示 除以4余数为1个 评估查询。</p><p><span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;}&#39;, got &#39;EOF&#39; at end of input: regex 通常使用格式为 {" style="color:#cc0000;">regex 通常使用格式为 {</span>regex:/xxx/x} 其中xxx为正则表达式的内容，而x为匹配参数选项(i表示不区分大小写、m是否换行匹配、s允许.字符匹配所有字符包括换行符、x忽略空格) <span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;}&#39;, got &#39;EOF&#39; at end of input: …ex还有另外2中写法，例如：{" style="color:#cc0000;">regex还有另外2中写法，例如：{</span>regex:/^yang/i} 还可以写成 {<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>g</mi><mi>e</mi><mi>x</mi><mo>:</mo><msup><mi mathvariant="normal">/</mi><mi>y</mi></msup><mi>a</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">/</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">regex:/^yang/,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">/</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mord mathnormal">an</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">/</span><span class="mpunct">,</span></span></span></span>options:&#39;i&#39;} 或 {<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>g</mi><mi>e</mi><mi>x</mi><msup><mo>:</mo><mrow><mo mathvariant="normal">′</mo><mi>y</mi></mrow></msup><mi>a</mi><mi>n</mi><msup><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">regex:&#39;^yang&#39;,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">:</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">an</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span>options:&#39;i&#39;}</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi><mtext>对应的搜索规则，与</mtext><mn>4</mn><mtext>个选项：</mtext></mrow><annotation encoding="application/x-tex">text对应的搜索规则，与4个选项：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">对应的搜索规则，与</span><span class="mord">4</span><span class="mord cjk_fallback">个选项：</span></span></span></span>search(关键词)、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>u</mi><mi>a</mi><mi>g</mi><mi>e</mi><mtext>、</mtext></mrow><annotation encoding="application/x-tex">language、</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">an</span><span class="mord mathnormal">gu</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">、</span></span></span></span>caseSensitive(大小写是否敏感，默认为false即不区分大小写)、$diacriticSensitive(声调是否敏感，默认为false即不敏感，例如：e 和 é)</p><p>$where 中对应的JavaScript表达式(或函数)中 this 指当前这条数据。 $where 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>r</mi><mtext>的区别：</mtext></mrow><annotation encoding="application/x-tex">expr 的区别：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">的区别：</span></span></span></span>where可以匹配以JavaScript表达式(或函数)为规则的数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>r</mi><mtext>不可以，</mtext></mrow><annotation encoding="application/x-tex">expr不可以，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">不可以，</span></span></span></span>expr对应的是以聚合查询为规则，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>r</mi><mtext>执行效率更快。因此，应优先使用</mtext></mrow><annotation encoding="application/x-tex">expr执行效率更快。因此，应优先使用</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">执行效率更快。因此，应优先使用</span></span></span></span>expr和对应的聚合表达式，而不是使用$where和对应的JS表达式。</p></blockquote><h4 id="地理空间查询" tabindex="-1"><a class="header-anchor" href="#地理空间查询"><span>地理空间查询</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$geoIntersects</td><td>查询出与区域相交的文档，仅支持2dsphere索引</td></tr><tr><td>$geoWithin</td><td>查询出完全包含在某个区域的文档，支持2dsphere和2d索引</td></tr><tr><td>$near</td><td>查询出距离某区域从近到远的其他区域文档，支持2dsphere和2d索引</td></tr><tr><td>$nearSphere</td><td>查询出距离球面几何上某个点从近到远的其他文档，支持2dsphere和2d索引</td></tr></tbody></table><blockquote><p>注意：<br> 地理空间查询非常重要，需要稍后再深入研究<br> 可参考这2篇文章：https://www.jianshu.com/p/f04810bfdc44 、https://yq.aliyun.com/articles/616432</p></blockquote><h4 id="数组查询" tabindex="-1"><a class="header-anchor" href="#数组查询"><span>数组查询</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$all</td><td>查询出数组中所有选项必须可以匹配到的文档，而$in只要求匹配到其中一个即可</td></tr><tr><td>$elemMath</td><td>查询出满足数组中每一个条件查询的文档</td></tr><tr><td>$size</td><td>查询出符合size设定长度的数组所对应的文档</td></tr></tbody></table><blockquote><p>注意：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><mtext>和</mtext></mrow><annotation encoding="application/x-tex">in和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">in</span><span class="mord cjk_fallback">和</span></span></span></span>nin归类在 比较查询 中，并不属于数组查询，尽管他们形式上也可以使用数组。</p></blockquote><h4 id="二进制操作" tabindex="-1"><a class="header-anchor" href="#二进制操作"><span>二进制操作</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$bitsAllClear</td><td>将符合条件的全部二进制数据的值设置为0，即全部清空</td></tr><tr><td>$bitsAllSet</td><td>将符合条件的全部二进制数据的值设置为1</td></tr><tr><td>$bitsAnyClear</td><td>将符合条件的任何二进制数据的值设置为0，即全部清空</td></tr><tr><td>$bitsAnySet</td><td>将符合条件的任何二进制数据的值设置为1</td></tr></tbody></table><blockquote><p>注意：<br> All和Any的区别暂时还不清楚，有待以后研究。</p></blockquote><h4 id="注释操作" tabindex="-1"><a class="header-anchor" href="#注释操作"><span>注释操作</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$comment</td><td>添加一条查询注释</td></tr></tbody></table><blockquote><p>注意：<br> 这条查询注释语句是会写入log日志文件中的，目的是为了查看日志时方便理解。</p></blockquote><h4 id="投影操作" tabindex="-1"><a class="header-anchor" href="#投影操作"><span>投影操作</span></a></h4>`,37),t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"语法"),t("th",null,"解释")])]),t("tbody",null,[t("tr",null,[t("td",null,"$"),t("td",null,"与查询值匹配的数组中第一个元素的投影，表现为 array.$")]),t("tr",null,[t("td",null,"$elemMatch"),t("td",{query:""},"与查询条件匹配的数组中第一个元素的投影，表现为 $elemMath:")]),t("tr",null,[t("td",null,"$meta"),t("td",null,'使用$text查询获得的文档匹配分数的投影，表现为 $meta: "textScore"')]),t("tr",null,[t("td",null,"$slice"),t("td",null,"控制数组返回数量(类似JS中array的slice方法)，表现为 $slice:[num] 或 $slice:[num1,num2]")])])],-1),t("blockquote",null,[t("p",null,[n("注意："),t("br"),n(" $meta 中的“文档匹配分数”指“匹配接近度”")])],-1),t("blockquote",null,[t("p",null,"$slice的参数也可以为负数，表示从数组结尾处开始计算，和JS中array.slice()完全一致")],-1),t("h2",{id:"更新运算",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#更新运算"},[t("span",null,"更新运算")])],-1),t("h4",{id:"字段属性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字段属性"},[t("span",null,"字段属性")])],-1),t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"语法"),t("th",null,"解释")])]),t("tbody",null,[t("tr",null,[t("td",null,"$currentDate"),t("td",null,"设置字段属性值为当前时间，可以是时间戳(timestamp)或日期(date)")]),t("tr",null,[t("td",null,"$inc"),t("td",null,"预聚合，将字段属性值按照指定的量进行自增")]),t("tr",null,[t("td",null,"$min"),t("td",null,"若字段属性值小于指定值，则将该属性值修改为该值")]),t("tr",null,[t("td",null,"$max"),t("td",null,"若字段属性值大于指定值，则将该属性值修改为该值")]),t("tr",null,[t("td",null,"$mul"),t("td",null,"将字段属性值乘以指定值")]),t("tr",null,[t("td",null,"$rename"),t("td",null,"将字段属性名修改为指定值")]),t("tr",null,[t("td",null,"$set"),t("td",null,"将字段属性值修改为指定值")]),t("tr",null,[t("td",null,"$setOnInsert"),t("td",null,"若更新导致插入该字段，并设定该字段属性值为指定值")]),t("tr",null,[t("td",null,"$unset"),t("td",{"xxx:":""},"删除该字段属性，表现为 {$unset:")])])],-1),s('<blockquote><p>注意：<br> 对字段操作的前提是该字段需要先存在，若不存在则会找不到对象的报错 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>e</mi><mi>t</mi><mi>O</mi><mi>n</mi><mi>I</mi><mi>n</mi><mi>s</mi><mi>e</mi><mi>r</mi><mi>t</mi><mtext>对于本身已存在该字段的文档不起作用</mtext></mrow><annotation encoding="application/x-tex">setOnInsert 对于本身已存在该字段的文档不起作用 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.02778em;">tO</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">ser</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">对于本身已存在该字段的文档不起作用</span></span></span></span>unset 虽然为删除某字段属性，但是依然需要编写代码，设置该字段属性值为&#39;&#39;</p></blockquote><h4 id="数组操作" tabindex="-1"><a class="header-anchor" href="#数组操作"><span>数组操作</span></a></h4><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意：<br> 以上所有的增加或删除，全部针对的是元素中某字段属性值为数组的操作，不是针对元素的操作。</p></blockquote><h4 id="修饰语" tabindex="-1"><a class="header-anchor" href="#修饰语"><span>修饰语</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$each</td><td>配合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi><mtext>或</mtext></mrow><annotation encoding="application/x-tex">push或</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mord cjk_fallback">或</span></span></span></span>addToSet，以数组形式储存要验证或添加的每一项</td></tr><tr><td>$position</td><td>配合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi><mtext>，表明插入的位置，</mtext></mrow><annotation encoding="application/x-tex">push，表明插入的位置，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mord cjk_fallback">，表明插入的位置，</span></span></span></span>position:0 即表示插入在开头第1项，<br>但是请注意 $position 必须配合 $push 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mo>:</mo><mo stretchy="false">[</mo><mo stretchy="false">]</mo><mtext>的形式才可以，示例：</mtext></mrow><annotation encoding="application/x-tex">each:[] 的形式才可以，示例：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mclose">]</span><span class="mord cjk_fallback">的形式才可以，示例：</span></span></span></span>push:{ myarr: { $each:[xxx,xxx], $position:0 }}</td></tr><tr><td>$slice</td><td>配合$push，控制修改之后属性值数组的长度，若超出则进行数组裁切</td></tr><tr><td>$sort</td><td>配合$push，表明以升序(值为-1)或降序(值为1)进行排序</td></tr></tbody></table><blockquote><p>注意：<br> $slice的值若为0则意味着将属性值数组清空、若为正整数则从左往右裁切、若为负整数则从右往左裁切</p></blockquote><h4 id="二进制操作-1" tabindex="-1"><a class="header-anchor" href="#二进制操作-1"><span>二进制操作</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$bit</td><td>以and或or或xor方式操作二进制数据</td></tr></tbody></table><h2 id="元操作" tabindex="-1"><a class="header-anchor" href="#元操作"><span>元操作</span></a></h2><h4 id="修饰语-1" tabindex="-1"><a class="header-anchor" href="#修饰语-1"><span>修饰语</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$comment</td><td>向查询添加注释</td></tr><tr><td>$explain</td><td>强制MongoDB报告查询执行计划</td></tr><tr><td>$hint</td><td>强制MongoDB使用特定索引</td></tr><tr><td>$max</td><td>获得最大值</td></tr><tr><td>$maxTimeMS</td><td>指定处理游标上的操作累计时间限制(毫秒)</td></tr><tr><td>$min</td><td>获得最小值</td></tr><tr><td>$orderby</td><td>返回一个光标，包含根据排序规范排序的文档</td></tr><tr><td>$query</td><td>包装查询文档</td></tr><tr><td>$returnKey</td><td>强制光标仅返回索引中包含的字段</td></tr><tr><td>$showDiskLoc</td><td>修改返回的文档以包含对每个文档的磁盘位置引用</td></tr></tbody></table><h4 id="排序" tabindex="-1"><a class="header-anchor" href="#排序"><span>排序</span></a></h4><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>$natural</td><td>使用磁盘上文档的顺序来排列文档</td></tr></tbody></table><h2 id="未完待续" tabindex="-1"><a class="header-anchor" href="#未完待续"><span>未完待续</span></a></h2><p>至此关于各种属性值(字符串、数字、地理空间、数组、二进制、元)的查询和修改对应的函数已梳理完毕，接下来是 聚合查询。</p>',16)]))}const h=e(d,[["render",p]]),c=JSON.parse('{"path":"/nosqldb/mongodb/axtf7ye7/","title":"MongoDB运算命令","lang":"zh-CN","frontmatter":{"title":"MongoDB运算命令","createTime":"2025/08/25 14:01:51","permalink":"/nosqldb/mongodb/axtf7ye7/"},"readingTime":{"minutes":9.67,"words":2902},"git":{"createdTime":1756736713000},"filePathRelative":"notes/nosqldb/mongodb/MongoDB运算命令.md","headers":[]}');export{h as comp,c as data};
