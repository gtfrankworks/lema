import{a as s,c as i,b as e,o as a}from"./app-ZQgO6-gU.js";const l={};function n(h,t){return a(),i("div",null,t[0]||(t[0]=[e(`<p>您好，我已经为您将提供的 PostgreSQL 数据类型内容整理成了更清晰、更易读的 Markdown 格式。我使用标题、列表和表格来重新组织了内容，使其结构更清晰，并加粗了关键术语，以帮助您更好地理解和学习。</p><hr><h3 id="postgresql-数据类型详解" tabindex="-1"><a class="header-anchor" href="#postgresql-数据类型详解"><span><strong>PostgreSQL 数据类型详解</strong></span></a></h3><h4 id="一、数值类型" tabindex="-1"><a class="header-anchor" href="#一、数值类型"><span>一、数值类型</span></a></h4><p>数值类型用于存储整数和浮点数，并支持不同范围和精度的数字。</p><table><thead><tr><th style="text-align:left;">名字</th><th style="text-align:left;">存储长度</th><th style="text-align:left;">描述</th><th style="text-align:left;">范围</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>smallint</strong></td><td style="text-align:left;">2 字节</td><td style="text-align:left;">小范围整数</td><td style="text-align:left;">-32768 到 +32767</td></tr><tr><td style="text-align:left;"><strong>integer</strong></td><td style="text-align:left;">4 字节</td><td style="text-align:left;">常用的整数</td><td style="text-align:left;">-2147483648 到 +2147483647</td></tr><tr><td style="text-align:left;"><strong>bigint</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">大范围整数</td><td style="text-align:left;">-9223372036854775808 到 +9223372036854775807</td></tr><tr><td style="text-align:left;"><strong>decimal/numeric</strong></td><td style="text-align:left;">可变长</td><td style="text-align:left;">用户指定的精度，精确</td><td style="text-align:left;">小数点前 131072 位；小数点后 16383 位</td></tr><tr><td style="text-align:left;"><strong>real</strong></td><td style="text-align:left;">4 字节</td><td style="text-align:left;">可变精度，不精确</td><td style="text-align:left;">6 位十进制数字精度</td></tr><tr><td style="text-align:left;"><strong>double precision</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">可变精度，不精确</td><td style="text-align:left;">15 位十进制数字精度</td></tr><tr><td style="text-align:left;"><strong>smallserial</strong></td><td style="text-align:left;">2 字节</td><td style="text-align:left;">自增的小范围整数</td><td style="text-align:left;">1 到 32767</td></tr><tr><td style="text-align:left;"><strong>serial</strong></td><td style="text-align:left;">4 字节</td><td style="text-align:left;">自增整数</td><td style="text-align:left;">1 到 2147483647</td></tr><tr><td style="text-align:left;"><strong>bigserial</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">自增的大范围整数</td><td style="text-align:left;">1 到 9223372036854775807</td></tr></tbody></table><hr><h4 id="二、货币类型" tabindex="-1"><a class="header-anchor" href="#二、货币类型"><span>二、货币类型</span></a></h4><p><code>money</code> 类型用于存储带有固定小数精度的货币金额。不建议使用浮点数来处理货币，以避免舍入错误。</p><table><thead><tr><th style="text-align:left;">名字</th><th style="text-align:left;">存储容量</th><th style="text-align:left;">描述</th><th style="text-align:left;">范围</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>money</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">货币金额</td><td style="text-align:left;">-92233720368547758.08 到 +92233720368547758.07</td></tr></tbody></table><hr><h4 id="三、字符类型" tabindex="-1"><a class="header-anchor" href="#三、字符类型"><span>三、字符类型</span></a></h4><p>PostgreSQL 支持多种字符类型，可以根据需求选择固定长度或可变长度的字符串。</p><table><thead><tr><th style="text-align:left;">名字 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>character varying(n), varchar(n)</strong>：变长，有长度限制。</td></tr><tr><td style="text-align:left;"><strong>character(n), char(n)</strong>：定长，不足会用空格填充。</td></tr><tr><td style="text-align:left;"><strong>text</strong>：变长，无长度限制。</td></tr></tbody></table><hr><h4 id="四、日期-时间类型" tabindex="-1"><a class="header-anchor" href="#四、日期-时间类型"><span>四、日期/时间类型</span></a></h4><p>PostgreSQL 提供了多种日期和时间类型，包括是否带时区。</p><table><thead><tr><th style="text-align:left;">名字</th><th style="text-align:left;">存储空间</th><th style="text-align:left;">描述</th><th style="text-align:left;">最低值</th><th style="text-align:left;">最高值</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>timestamp [ (p) ] [ without time zone ]</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">日期和时间 (无时区)</td><td style="text-align:left;">4713 BC</td><td style="text-align:left;">294276 AD</td></tr><tr><td style="text-align:left;"><strong>timestamp [ (p) ] with time zone</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">日期和时间，带时区</td><td style="text-align:left;">4713 BC</td><td style="text-align:left;">294276 AD</td></tr><tr><td style="text-align:left;"><strong>date</strong></td><td style="text-align:left;">4 字节</td><td style="text-align:left;">只用于日期</td><td style="text-align:left;">4713 BC</td><td style="text-align:left;">5874897 AD</td></tr><tr><td style="text-align:left;"><strong>time [ (p) ] [ without time zone ]</strong></td><td style="text-align:left;">8 字节</td><td style="text-align:left;">只用于一日内时间</td><td style="text-align:left;">00:00:00</td><td style="text-align:left;">24:00:00</td></tr><tr><td style="text-align:left;"><strong>time [ (p) ] with time zone</strong></td><td style="text-align:left;">12 字节</td><td style="text-align:left;">只用于一日内时间，带时区</td><td style="text-align:left;">00:00:00+1459</td><td style="text-align:left;">24:00:00-1459</td></tr><tr><td style="text-align:left;"><strong>interval [ fields ] [ (p) ]</strong></td><td style="text-align:left;">12 字节</td><td style="text-align:left;">时间间隔</td><td style="text-align:left;">-178000000 年</td><td style="text-align:left;">178000000 年</td></tr></tbody></table><hr><h4 id="五、布尔类型" tabindex="-1"><a class="header-anchor" href="#五、布尔类型"><span>五、布尔类型</span></a></h4><p><code>boolean</code> 类型用于存储逻辑真值。</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">存储格式</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>boolean</strong></td><td style="text-align:left;">1 字节</td><td style="text-align:left;"><strong>true</strong>（真）、<strong>false</strong>（假）、<strong>NULL</strong>（未知）</td></tr></tbody></table><hr><h4 id="六、枚举类型" tabindex="-1"><a class="header-anchor" href="#六、枚举类型"><span>六、枚举类型</span></a></h4><p><strong>枚举（ENUM）</strong> 类型是一个包含静态、有序值的集合。需要使用 <code>CREATE TYPE</code> 命令创建。</p><p><strong>创建示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TYPE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> mood</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ENUM (</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sad</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">happy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> person</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    current_mood mood</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">INSERT INTO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> person </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">VALUES</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Moe</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">happy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="七、几何类型" tabindex="-1"><a class="header-anchor" href="#七、几何类型"><span>七、几何类型</span></a></h4><p>几何数据类型表示二维的平面物体，最基本的类型是 <strong>point</strong>。</p><table><thead><tr><th style="text-align:left;">名字</th><th style="text-align:left;">存储空间</th><th style="text-align:left;">说明</th><th style="text-align:left;">表现形式</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>point</strong></td><td style="text-align:left;">16 字节</td><td style="text-align:left;">平面中的点</td><td style="text-align:left;">(x,y)</td></tr><tr><td style="text-align:left;"><strong>line</strong></td><td style="text-align:left;">32 字节</td><td style="text-align:left;">(无穷)直线</td><td style="text-align:left;">((x1,y1),(x2,y2))</td></tr><tr><td style="text-align:left;"><strong>lseg</strong></td><td style="text-align:left;">32 字节</td><td style="text-align:left;">(有限)线段</td><td style="text-align:left;">((x1,y1),(x2,y2))</td></tr><tr><td style="text-align:left;"><strong>box</strong></td><td style="text-align:left;">32 字节</td><td style="text-align:left;">矩形</td><td style="text-align:left;">((x1,y1),(x2,y2))</td></tr><tr><td style="text-align:left;"><strong>path</strong></td><td style="text-align:left;">16+16n 字节</td><td style="text-align:left;">闭合/开放路径</td><td style="text-align:left;">((x1,y1),...) / [(x1,y1),...]</td></tr><tr><td style="text-align:left;"><strong>polygon</strong></td><td style="text-align:left;">40+16n 字节</td><td style="text-align:left;">多边形</td><td style="text-align:left;">((x1,y1),...)</td></tr><tr><td style="text-align:left;"><strong>circle</strong></td><td style="text-align:left;">24 字节</td><td style="text-align:left;">圆</td><td style="text-align:left;">&lt;(x,y),r&gt;</td></tr></tbody></table><hr><h4 id="八、网络地址类型" tabindex="-1"><a class="header-anchor" href="#八、网络地址类型"><span>八、网络地址类型</span></a></h4><p>这些类型用于存储 IPv4、IPv6 和 MAC 地址，并提供错误检查和特殊操作。</p><table><thead><tr><th style="text-align:left;">名字</th><th style="text-align:left;">存储空间</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>cidr</strong></td><td style="text-align:left;">7 或 19 字节</td><td style="text-align:left;">IPv4 或 IPv6 网络</td></tr><tr><td style="text-align:left;"><strong>inet</strong></td><td style="text-align:left;">7 或 19 字节</td><td style="text-align:left;">IPv4 或 IPv6 主机和网络</td></tr><tr><td style="text-align:left;"><strong>macaddr</strong></td><td style="text-align:left;">6 字节</td><td style="text-align:left;">MAC 地址</td></tr></tbody></table><hr><h4 id="九、位串类型" tabindex="-1"><a class="header-anchor" href="#九、位串类型"><span>九、位串类型</span></a></h4><p>位串是 1 和 0 的字符串，可用于存储和操作位掩码。</p><ul><li><strong>bit(n)</strong>：定长，必须匹配长度 <code>n</code>。</li><li><strong>bit varying(n)</strong>：变长，最长 <code>n</code>。</li></ul><hr><h4 id="十、文本搜索类型" tabindex="-1"><a class="header-anchor" href="#十、文本搜索类型"><span>十、文本搜索类型</span></a></h4><p>用于支持全文检索，提供对文档进行索引和查询的功能。</p><ul><li><strong>tsvector</strong>：存储无重复词汇的排序列表。</li><li><strong>tsquery</strong>：存储用于检索的词汇，并使用布尔操作符 <code>&amp;</code>、<code>\\|</code> 和 <code>!</code> 进行组合。</li></ul><hr><h4 id="十一、uuid-类型" tabindex="-1"><a class="header-anchor" href="#十一、uuid-类型"><span>十一、UUID 类型</span></a></h4><p><code>UUID</code>（通用唯一标识符）是 128 位的标识符，常用于分布式系统，提供比序列号更好的唯一性保证。</p><p><strong>示例：</strong> <code>a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11</code></p><hr><h4 id="十二、xml-类型" tabindex="-1"><a class="header-anchor" href="#十二、xml-类型"><span>十二、XML 类型</span></a></h4><p><code>xml</code> 类型用于存储 XML 数据，可以检查数据的格式，并支持相关的函数。</p><p><strong>创建示例：</strong><code>XMLPARSE (DOCUMENT &#39;&lt;book&gt;&lt;title&gt;Manual&lt;/title&gt;&lt;/book&gt;&#39;)</code></p><hr><h4 id="十三、json-类型" tabindex="-1"><a class="header-anchor" href="#十三、json-类型"><span>十三、JSON 类型</span></a></h4><p><code>json</code> 类型用于存储 JSON 数据，并提供函数来处理这些数据。 <code>jsonb</code> 是更高效的二进制版本，推荐使用。</p><hr><h4 id="十四、数组类型" tabindex="-1"><a class="header-anchor" href="#十四、数组类型"><span>十四、数组类型</span></a></h4><p>PostgreSQL 允许将字段定义为变长的多维数组。</p><p><strong>声明示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sal_emp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    pay_by_quarter </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">integer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[],</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    schedule </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[][]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>插入和查询示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 插入数组值</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">INSERT INTO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sal_emp </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">VALUES</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Bill</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{10000, 10000}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{{&quot;meeting&quot;}}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 访问数组元素</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> name</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sal_emp </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> pay_by_quarter[1] </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10000</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="十五、复合类型" tabindex="-1"><a class="header-anchor" href="#十五、复合类型"><span>十五、复合类型</span></a></h4><p><strong>复合类型</strong> 表示一行或一条记录的结构，可以在表的字段中使用。</p><p><strong>声明示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TYPE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> inventory_item</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    supplier_id </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">integer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    price </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">numeric</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> on_hand</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    item inventory_item,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    count </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">integer</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>访问字段：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 需要用括号来避免歧义</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (item).</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> on_hand;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="十六、范围类型" tabindex="-1"><a class="header-anchor" href="#十六、范围类型"><span>十六、范围类型</span></a></h4><p><strong>范围类型</strong> 表示某一元素类型在一定范围内的值。</p><p><strong>内置类型：</strong></p><ul><li><code>int4range</code>：整数范围</li><li><code>tsrange</code>：时间戳范围 (无时区)</li><li><code>daterange</code>：日期范围</li></ul><p><strong>使用示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 包含</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> int4range(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) @</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 重叠</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> numrange(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">11</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">22</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) &amp;&amp; numrange(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">30</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="十七、对象标识符类型" tabindex="-1"><a class="header-anchor" href="#十七、对象标识符类型"><span>十七、对象标识符类型</span></a></h4><p><code>OID</code>（对象标识符）是 PostgreSQL 内部使用的系统表主键。</p><ul><li><strong>oid</strong>：任意数字化对象标识符。</li><li><strong>regclass</strong>：关系名，如 <code>pg_type</code>。</li></ul><hr><h4 id="十八、伪类型" tabindex="-1"><a class="header-anchor" href="#十八、伪类型"><span>十八、伪类型</span></a></h4><p><strong>伪类型</strong> 不能作为表的字段类型，但可以用于声明函数的参数或返回值类型。</p><p><strong>常见伪类型：</strong></p><ul><li><strong>any</strong>：接受任何输入数据类型。</li><li><strong>void</strong>：函数不返回任何值。</li><li><strong>record</strong>：函数返回一个未声明的行类型。</li></ul>`,84)]))}const r=s(l,[["render",n]]),g=JSON.parse('{"path":"/PostgreSQL/g0fcgzo7/","title":"PostgreSQL数据类型","lang":"zh-CN","frontmatter":{"title":"PostgreSQL数据类型","createTime":"2025/08/26 15:04:08","permalink":"/PostgreSQL/g0fcgzo7/"},"readingTime":{"minutes":4.83,"words":1449},"git":{"createdTime":1756736713000},"filePathRelative":"notes/PostgreSQL/PostgreSQL数据类型.md","headers":[]}');export{r as comp,g as data};
