import{a as n,c as l,b as t,d as i,f as a,e as h,w as k,r as p,o as d}from"./app-ZQgO6-gU.js";const r="/lema/images/git/new-repository.png",g="/lema/images/git/create-repository.png",c="/lema/images/git/project-detail.png",o="/lema/images/git/clone-https.png",u="/lema/images/git/clone-ssh.png",A="/lema/images/git/issue-ui.png",v="/lema/images/git/issue-create.png",y="/lema/images/git/setting-collaborators.png",m="/lema/images/git/setting-delete.png",b="/lema/images/git/PR-1.png",D="/lema/images/git/user-setting.png",C="/lema/images/git/ssh-add.png",f={};function B(x,s){const e=p("VPLink");return d(),l("div",null,[s[10]||(s[10]=t(`<h2 id="标签管理" tabindex="-1"><a class="header-anchor" href="#标签管理"><span>标签管理</span></a></h2><blockquote><p>标签，也叫tag,在git中，它类似于一个不能移动的分支【我们知道，分支本质上是一个可移动的指定】，所以，标签就是钉死在某个提交点上的一种技术，相对提交点，我们可以在标签上附加上一些其它的信息，比如数字签名之类的</p></blockquote><h3 id="标签操作" tabindex="-1"><a class="header-anchor" href="#标签操作"><span>标签操作</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 列出所有的标签</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 如果标签太多，还可以通过-l参数来过滤, 匹配字符中可以写 * 来通配</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">匹配字符</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看单个指定的标签</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>下面我们来创建几个标签，需要注意的是在git中，以两种不同的标签，分别是：</p><ul><li>轻量标签[lightweight]</li><li>附注标签[annotated]</li></ul><blockquote><p>一个轻量标签很像一个不会改变的分支 - 它只是一个特定提交的引用。<br> 然而，附注标签是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。 通常建议创建附注标签，这样你可以拥有以上所有信息；但是如果你只是想用一个临时的标签，或者因为某些原因不想要保存那些信息，轻量标签也是可用的</p></blockquote><p>下面我们分别来创建这两种标签</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 基于当前提交点来创建一个轻量标签</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你想基于之前某个提交点来创建另一个标签，我们可以使用<code>git log --oneline</code> 来得到提交点，然后再创建标签，如下：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> log</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --oneline</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">117b6f7</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Merge</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">testing</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2393508</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> modify</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f4.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2b4645f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> modify</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">79309a2</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> delete</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> world.java</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">190db88</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> modify</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> World.java</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">0ff04d2</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 修改World.java文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">e986401</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 添加World.java文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">f6e2999</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> new</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f4.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">c5fd500</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> new</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f3.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">6d0a0e2</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Merge</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">issue2</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">5cc9e23</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> new</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f2.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">d0f63b3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> resolved</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> conflict</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">b6152d7</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> readme.txt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> by</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">235e87d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> readme.txt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> in</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> issue1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">4324270</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> readme.txt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，我想基于<code>5cc9e23</code>提交点来创建一个标签，如下：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v0.1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5cc9e23</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>没有任何提示，则表示创建标签成功.</p><p>如果要创建附注标签，则执行：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v0.2</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">一个玩具版本，只有最基本的功能</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f6e2999</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在，我们通过命令<code>git show tag_name</code> 来看看轻量标签与附注标签的区别，如下：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v0.1</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#显示的结果如下：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5cc9e23fe5504127db5a1f714fae46c2f071ca57</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Author:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> yejf</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">yejf@sz-tz.or</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">g</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Date:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   Thu</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Dec</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 28</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 11:18:21</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2017</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> new</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f2.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出，只有提交点的信息</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v0.2</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#显示的结果如下：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tag</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v0.2</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Tagger:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lema</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">lema@sz.or</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">g</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Date:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   Wed</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Jan</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 23:06:10</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2018</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">一个玩具版本，只有最基本的功能</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f6e2999ec7aa1ce1b8792db85ca3d191ce12eceb</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Author:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lema</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">lema@sz.or</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">g</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> new</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f4.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，附注标签除了提交点外，还有创建标签的作者、创建日期信息。</p><h3 id="推送到远程" tabindex="-1"><a class="header-anchor" href="#推送到远程"><span>推送到远程</span></a></h3><blockquote><p>默认情况下，<code>git push</code>操作并不会传递标签到远程仓库中，你必需显示地推送，执行：<code>git push origin [tagname]</code><br> 如果你想把本地的创建标签都推送到远程，可以执行：<code>git push origin --tags</code></p></blockquote><p>现在，当其他人从仓库中克隆或拉取时，他们也能得到你推送的标签。</p><h2 id="github操作" tabindex="-1"><a class="header-anchor" href="#github操作"><span>github操作</span></a></h2><blockquote><p>github做为最知名的项目托管平台，世界上大多数的开源项目都托管在github上，几乎涵盖了所有编程语言的开源项目，做为开发人员，不能没有github帐号，所以，如果你还没有github帐号的话，请点击<a href="https://github.com" target="_blank" rel="noopener noreferrer">此处</a>，注册一个.</p></blockquote><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><p>登录github后，我们就可以创建一个项目，也叫一个repository, 在网站的右上角，点击**+**号，如下： <img src="`+r+'" alt="" loading="lazy"></p><p>会弹出另一个页面，让你填写仓库相关的资料，如下： <img src="'+g+'" alt="" loading="lazy"></p><ul><li>输入仓库名[repository name],也就是项目名，一个仓库对应一个项目</li><li>输入描述信息</li><li>默认勾选了 Public 项目</li><li>勾选生成项目的 README 文件</li><li>添加 .gitignore 文件和选择开源许可证</li><li>最后，点击 <strong>Create Repository</strong> 按钮</li></ul><p>创建好项目后，我们就可以进入项目，并对项目界面做一下基本的认识</p><h3 id="管理项目" tabindex="-1"><a class="header-anchor" href="#管理项目"><span>管理项目</span></a></h3><p>首先，进入项目后，我们可以看到如下界面： <img src="'+c+`" alt="" loading="lazy"> 可以看到，第一个标签就是<code>Code</code>, 也就是我们的项目代码，但此时，里面只有我们让生成的3个文件，如下：</p><ul><li>.gitignore</li><li>LICENSE</li><li>README.md</li></ul><p>其中，.gitignore文件是告诉git仓库，在工作区中的哪些文件我们无需管理，也就是忽略的文件，它的内容大致如下：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span># eclise environments</span></span>
<span class="line"><span>.classpath</span></span>
<span class="line"><span>.project</span></span>
<span class="line"><span>.class</span></span>
<span class="line"><span>.war</span></span>
<span class="line"><span>.zip</span></span>
<span class="line"><span>.rar</span></span>
<span class="line"><span># IDEA environments</span></span>
<span class="line"><span>.idea</span></span>
<span class="line"><span>*.iml</span></span>
<span class="line"><span>.settings/*</span></span>
<span class="line"><span># maven environments</span></span>
<span class="line"><span>/target/*</span></span>
<span class="line"><span>/target/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，#开头的表示注释，* 代表通配， / 代表目录， 这个文件我们可以自己书写里面的内容，默认情况下，不同的开发语言这个文件的内容不同。</p><p>而LICENSE文件是开源许可证协议文件，一般无需操作 README.md 文件是针对项目的描述性文本，它采用markdown格式编写，遵守md的语法。</p><p>另外，在项目主页面上，还可以看到当前的分支，提交次数，分支数， 贡献者，发布次数 信息，也有Issues, Pull Requests, Project, Wiki, Setting 等功能标签，所有，我们在这个页面上，就可以操作与项目相关的所有事情。</p><p>下面就说说如何去clone一个项目以及何在项目中创建issue</p><ul><li>clone项目，支持两种方式，默认是https，还有就是 ssh, 先来看一下https的地址 点击按钮<strong>Clone or download</strong>,可以看到如下界面 <img src="`+o+'" alt="" loading="lazy"> 可以看到我们要克隆项目的https地址，为：<code>https://github.com/yejf/gitdemo.git</code> 当然，你也可以很容易地切换到ssh地址，只需要点击这个弹出层的右上角的<strong>Use SSH</strong>, 得到如下界面 <img src="'+u+'" alt="" loading="lazy"> 我们看到的项目地址变成了：<code>git@github.com:yejf/gitdemo.git</code></li></ul><p>我们这里采用https的地址，你在你本地电脑的任何位置，右击，选择<code>git bash here</code>后，在命令行中，输入：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/yejf/gitdemo.git</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #注：这个地址要写你自己的地址，也行这会儿我已经删除了这个项目</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样一来，你在本地就克隆了一份远程仓库的项目，其它的操作就是git的操作，前二篇文章我们对git做了讲解。</p><p>我们要开发项目，得要有做事的指导方针和总体需求，把总体需求按照一定的设计划分成多个不同的任务，然后再一个一个地完成这些任务，当然，多人协作时，可以让多人来完成这些任务，有的任务之间有先后顺序，任务有轻重缓急等等，这些任务，在github上就是<code>Issue</code>, 所以，我们要来了解一下如何创建和管理 <code>Issue</code></p><p>我们在项目主页面上，点击<strong>Issues</strong>标签，进入 Issue界面，如下： <img src="'+A+'" alt="" loading="lazy"> 第一次进来，这里没有任何的issue, 需要项目开发人员自行创建issue,创建的按钮清晰明了，在右边点击<strong>New Issue</strong>, 出来如下界面： <img src="'+v+'" alt="" loading="lazy"> 左边主体部份是issue标题和issue具体内容，我们可以对这个任务做评细的描述，不同的公司可能会有不同的描述规则，这时不多做介绍，主要目的是把要做的事情描述清楚。</p><p>右边有较丰富的辅助性设置，包含：指定受托人[assignees], 给任务打上Labels, 选择里程碑[Milestone],指定完成时间等信息，当然，这些都不是必需的，但是对于一个issue来讲，有这些辅助信息可以让多人协作更有效率，配合更好。</p><p>创建好issue后，指定的受托人[assignees]会收到一个通知，同时，参与者可以在每个issue下面评论，完成 issue后，可以close这个issue, 如果发现之前的issue没有完成后，还可以再次open这个issue, 具体的操作可以在项目中体验。</p><h4 id="项目成员的管理" tabindex="-1"><a class="header-anchor" href="#项目成员的管理"><span>项目成员的管理</span></a></h4><p>上面讲到issue的创建和使用，在创建issue时，指定assignees时，是从我们这个项目的参与者中来选择的，所以，事先，我们应该把相关的开发人员添加到我们的项目中来，可以有多种式来邀请，如：</p><ul><li>发送邀请链接</li><li>直接搜索人员，并加入</li></ul><p>进入项目的<strong>setting</strong>标签，选择 <strong>Collaborators</strong> 选项卡，如下： <img src="'+y+'" alt="" loading="lazy"></p><p>里面可以让我们输入参与者的名字进行google式搜索，前提这个用户是github平台上的注册用户。</p><p>一旦某个人进入到了这个项目，在他们主页面上就可以看到。</p><h4 id="删除项目" tabindex="-1"><a class="header-anchor" href="#删除项目"><span>删除项目</span></a></h4><blockquote><p>这个动作比较危险，因为一旦实施了删除，就再也不能恢复，所以，github平台上，删除项目的入口<strong>藏</strong>得很深。 进入项目的<strong>setting</strong>标签，选择 <strong>Options</strong> 选项卡，然后一直把页面通过下拉框拉到最下面，看到如下界面： <img src="'+m+`" alt="" loading="lazy"> 然后，点击<strong>delete this repository</strong></p></blockquote><p>会得到再次确认的警告，并让用输入项目的名称，如果项目名称输入无误后，就会彻底地删除这个项目</p><h4 id="基于pr的操作" tabindex="-1"><a class="header-anchor" href="#基于pr的操作"><span>基于PR的操作</span></a></h4><blockquote><p>PR，也叫Pull Request, 是一种基于分支、合并的开发流程，它可以让项目的所有参与者都各自在自己的分支上开发，而互不影响，由某个人负责去合并分支，而不是由后提交者负责合并，把处理冲突的操作放到不影响开发的情形下进行，实践证明，基于RP的开发是很管用的。</p></blockquote><p>使用RP的流程大致如下：</p><ul><li>开发者拿到分配给自己的issue</li><li>拉取出 develop分支或master分支的最新版本</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> checkout</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在本地仓库创建一个与issue名同名的分支,并切换到此分支上</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> checkout</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -b</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> issueXXX</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>完成issue中规定的任务代码，添加并提交修改</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --all</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">日志</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>把本地的issue分支推送到远程</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --set-upstream</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> issueXXX</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   # 第一次需要这么做，后面直接 git push 【因为远程已有这个分支】</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>在github平台上的项目中，创建一个RP, 如下： <img src="`+b+'" alt="" loading="lazy"> 填写相关的资讯后，可以选择代码审核人员以及测式人员，提交即可</p></li><li><p>代码审核人员得到通知后，审核并测试代码，如果没有问题，则合并到 develop分支或master分支上去 这个在平台上可以可视化操作合并</p></li><li><p>审核者在远程仓库中删除这个分支 在平台上可以可视化地删除</p></li><li><p>开发者在本地删除这个分支</p></li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> issueXXX</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上就是基于PR开发的基本流程，当然这些都是可以在开发中调整的，不同的项目规模采用的开发模式会不一样，所以，不能生搬硬套，而是要掌握git的核心，在具体的项目中灵活运用才是正道。</p><h4 id="设置ssh的key" tabindex="-1"><a class="header-anchor" href="#设置ssh的key"><span>设置ssh的KEY</span></a></h4><blockquote><p>前提：<br> 在本地你要利用ssh的工具生成公钥，然后把公钥的内容COPY一份，再到github上进行配置，如下：</p></blockquote>',75)),i("p",null,[s[1]||(s[1]=a("点击用户头像边上的下拉按钮，选择 ",-1)),s[2]||(s[2]=i("strong",null,"Setting",-1)),s[3]||(s[3]=a(", 如下： ",-1)),s[4]||(s[4]=i("img",{src:D,alt:"",loading:"lazy"},null,-1)),s[5]||(s[5]=a(" 然后，再选择",-1)),s[6]||(s[6]=i("strong",null,"SSH and GPG keys",-1)),s[7]||(s[7]=a(", 进入如下界面 ",-1)),s[8]||(s[8]=i("img",{src:C,alt:"",loading:"lazy"},null,-1)),s[9]||(s[9]=a(" 到了这个界面上，标题可以任意写，而内容就是要你事先生成的SSH的公钥，有关这一部分的内容，请查看",-1)),h(e,{href:"ssh.md"},{default:k(()=>s[0]||(s[0]=[a("ssh学习",-1)])),_:1,__:[0]})]),s[11]||(s[11]=i("h2",{id:"命令小结",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#命令小结"},[i("span",null,"命令小结")])],-1)),s[12]||(s[12]=i("ul",null,[i("li",null,"$ git tag tag_name"),i("li",null,"$ git tag [-a] tag_name commit_id"),i("li",null,"$ git show tag_name"),i("li",null,"$ git tag"),i("li",null,"$ git tag -l '匹配模式'"),i("li",null,"$ git tag -a tag_name -m '日志'"),i("li",null,"$ git push origin tag_name | [--tags]")],-1))])}const $=n(f,[["render",B]]),_=JSON.parse('{"path":"/tools/git/edxnfkle/","title":"Git的标签管理","lang":"zh-CN","frontmatter":{"title":"Git的标签管理","createTime":"2025/08/12 17:12:00","permalink":"/tools/git/edxnfkle/"},"readingTime":{"minutes":10.09,"words":3027},"git":{"createdTime":1756736713000},"filePathRelative":"notes/tools/git/git-3.md","headers":[]}');export{$ as comp,_ as data};
