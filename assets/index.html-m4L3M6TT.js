import{a as i,c as a,b as l,o as e}from"./app-ZQgO6-gU.js";const n={};function h(k,s){return e(),a("div",null,s[0]||(s[0]=[l(`<p>PostgreSQL 触发器是数据库的回调函数，它会在指定的数据库事件发生时自动执行/调用。</p><p>下面是关于 PostgreSQL 触发器几个比较重要的点：</p><ul><li>PostgreSQL 触发器可以在下面几种情况下触发： <ul><li>在执行操作之前（在检查约束并尝试插入、更新或删除之前）。</li><li>在执行操作之后（在检查约束并插入、更新或删除完成之后）。</li><li>更新操作（在对一个视图进行插入、更新、删除时）。</li></ul></li><li>触发器的 FOR EACH ROW 属性是可选的，如果选中，当操作修改时每行调用一次；相反，选中 FOR EACH STATEMENT，不管修改了多少行，每个语句标记的触发器执行一次。</li><li>WHEN 子句和触发器操作在引用 NEW.column-name 和 OLD.column-name 表单插入、删除或更新时可以访问每一行元素。其中 column-name 是与触发器关联的表中的列的名称。</li><li>如果存在 WHEN 子句，PostgreSQL 语句只会执行 WHEN 子句成立的那一行，如果没有 WHEN 子句，PostgreSQL 语句会在每一行执行。</li><li>BEFORE 或 AFTER 关键字决定何时执行触发器动作，决定是在关联行的插入、修改或删除之前或者之后执行触发器动作。</li><li>要修改的表必须存在于同一数据库中，作为触发器被附加的表或视图，且必须只使用 tablename，而不是 database.tablename。</li><li>当创建约束触发器时会指定约束选项。这与常规触发器相同，只是可以使用这种约束来调整触发器触发的时间。当约束触发器实现的约束被违反时，它将抛出异常。</li></ul><h2 id="_1-1-语法" tabindex="-1"><a class="header-anchor" href="#_1-1-语法"><span>1.1 语法</span></a></h2><p>创建触发器时的基础语法如下：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  TRIGGER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> trigger_name [</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEFORE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AFTER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|INSTEAD </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OF</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">] event_name</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> -- 触发器逻辑....</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">];</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，event_name 可以是在所提到的表 table_name 上的 INSERT、DELETE 和 UPDATE 数据库操作。您可以在表名后选择指定 FOR EACH ROW。</p><p>以下是在 UPDATE 操作上在表的一个或多个指定列上创建触发器的语法：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  TRIGGER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> trigger_name [</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BEFORE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AFTER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">] </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">UPDATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> OF</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> column_name</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> -- 触发器逻辑....</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">];</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-1-实例" tabindex="-1"><a class="header-anchor" href="#_1-1-1-实例"><span>1.1.1 实例</span></a></h3><p>让我们假设一个情况，我们要为被插入到新创建的 COMPANY 表（如果已经存在，则删除重新创建）中的每一个记录保持审计试验：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">runoobdb</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># CREATE </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">TABLE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> COMPANY(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   ID INT </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">PRIMARY KEY</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">     NOT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> NULL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">   NAME</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">           TEXT    </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">NOT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> NULL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   AGE            INT     </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">NOT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> NULL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   ADDRESS        </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">CHAR</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">50</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   SALARY         REAL</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了保持审计试验，我们将创建一个名为 AUDIT 的新表。每当 COMPANY 表中有一个新的记录项时，日志消息将被插入其中：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">runoobdb</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># CREATE </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">TABLE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> AUDIT(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   EMP_ID INT </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">NOT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> NULL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   ENTRY_DATE TEXT </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">NOT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，ID 是 AUDIT 记录的 ID，EMP_ID 是来自 COMPANY 表的 ID，DATE 将保持 COMPANY 中记录被创建时的时间戳。所以，现在让我们在 COMPANY 表上创建一个触发器，如下所示：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">runoobdb</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># CREATE </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">TRIGGER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> example_trigger </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AFTER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> INSERT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> ON</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> COMPANY </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FOR</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> EACH </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ROW</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> EXECUTE PROCEDURE auditlogfunc();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>auditlogfunc() 是 PostgreSQL 一个程序，其定义如下：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE OR REPLACE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> FUNCTION auditlogfunc() RETURNS </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">TRIGGER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> $example_table$</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">   BEGIN</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">      INSERT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> INTO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> AUDIT(EMP_ID, ENTRY_DATE) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">VALUES</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (new.ID, </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">current_timestamp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">      RETURN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> NEW;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">   END</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">$example_table$ </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LANGUAGE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> plpgsql;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，我们开始往 COMPANY 表中插入数据：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">runoobdb</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">INSERT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> INTO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> COMPANY (ID,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">NAME</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,AGE,ADDRESS,SALARY) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">VALUES</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Paul&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">32</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;California&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20000.00</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> );</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这时，COMPANY 表中插入了一条记录：</p><p>同时， AUDIT 表中也插入了一条记录，因为我们在插入 COMPANY 表时创建了一个触发器。相似的，我们也可以根据需求在更新和删除时创建触发器：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">emp_id |          entry_date</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--------+-------------------------------</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">      1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2013</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">05</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">05</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 15</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">49</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">59.968</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">05</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">30</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-2-列出触发器" tabindex="-1"><a class="header-anchor" href="#_1-2-列出触发器"><span>1.2 列出触发器</span></a></h2><p>你可以把从 pg_trigger 表中把当前数据库所有触发器列举出来：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">runoobdb</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> pg_trigger;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果，你想列举出特定表的触发器，语法如下：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">runoobdb</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> tgname </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> pg_trigger, pg_class </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> tgrelid</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pg_class.oid </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AND</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> relname</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;company&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>得到结果如下：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> tgname</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> example_trigger</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-3-删除触发器" tabindex="-1"><a class="header-anchor" href="#_1-3-删除触发器"><span>1.3 删除触发器</span></a></h2><p>删除触发器基础语法如下：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">drop</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> trigger</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> \${trigger_name} </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> \${table_of_trigger_dependent};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>删除本文上表 company 上的触发器 example_trigger 的指令为：</p><div class="language-plsql line-numbers-mode" data-highlighter="shiki" data-ext="plsql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plsql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">drop</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> trigger</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> example_trigger </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> company;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,35)]))}const p=i(n,[["render",h]]),d=JSON.parse('{"path":"/PostgreSQL/cgz1pyx3/","title":"PostgreSQL 触发器 ","lang":"zh-CN","frontmatter":{"title":"PostgreSQL 触发器 ","createTime":"2025/08/26 15:13:11","permalink":"/PostgreSQL/cgz1pyx3/"},"readingTime":{"minutes":3.49,"words":1048},"git":{"createdTime":1756736713000},"filePathRelative":"notes/PostgreSQL/PostgreSQL触发器 .md","headers":[]}');export{p as comp,d as data};
