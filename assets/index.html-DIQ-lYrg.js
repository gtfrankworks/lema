import{a as n,c as a,b as e,o as i}from"./app-ZQgO6-gU.js";const l="/lema/images/spring6/2024-01-03-10-19-02-DWA4R0Dl.png",p="/lema/images/spring6/2024-01-03-10-28-11-Dh1BE4_c.png",t={};function r(c,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h2 id="i18n概述" tabindex="-1"><a class="header-anchor" href="#i18n概述"><span>i18n概述</span></a></h2><p>国际化也称作i18n，其来源是英文单词 internationalization的首末字符i和n，18为中间的字符数。由于软件发行可能面向多个国家，对于不同国家的用户，软件显示不同语言的过程就是国际化。通常来讲，软件中的国际化是通过配置文件来实现的，假设要支撑两种语言，那么就需要两个版本的配置文件。</p><h2 id="java国际化" tabindex="-1"><a class="header-anchor" href="#java国际化"><span>Java国际化</span></a></h2><p>（1）Java自身是支持国际化的，java.util.Locale用于指定当前用户所属的语言环境等信息，java.util.ResourceBundle用于查找绑定对应的资源文件。Locale包含了language信息和country信息，Locale创建默认locale对象时使用的静态方法：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>    /**</span></span>
<span class="line"><span>     * This method must be called only for creating the Locale.*</span></span>
<span class="line"><span>     * constants due to making shortcuts.</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    private static Locale createConstant(String lang, String country) {</span></span>
<span class="line"><span>        BaseLocale base = BaseLocale.createInstance(lang, country);</span></span>
<span class="line"><span>        return getInstance(base, null);</span></span>
<span class="line"><span>    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）配置文件命名规则： <strong>basename_language_country.properties</strong> 必须遵循以上的命名规则，java才会识别。其中，basename是必须的，语言和国家是可选的。这里存在一个优先级概念，如果同时提供了messages.properties和messages_zh_CN.propertes两个配置文件，如果提供的locale符合en_CN，那么优先查找messages_en_CN.propertes配置文件，如果没查找到，再查找messages.properties配置文件。最后，提示下，所有的配置文件必须放在classpath中，一般放在resources目录下</p><p><strong>（3）实验：演示Java国际化</strong></p><p><strong>第一步 创建子模块spring6-i18n，引入spring依赖</strong></p><p><strong>第二步 在resource目录下创建两个配置文件：messages_zh_CN.propertes和messages_en_GB.propertes</strong></p><figure><img src="`+l+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>第三步 测试</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>import java.nio.charset.StandardCharsets;</span></span>
<span class="line"><span>import java.util.Locale;</span></span>
<span class="line"><span>import java.util.ResourceBundle;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public class Demo1 {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static void main(String[] args) {</span></span>
<span class="line"><span>        System.out.println(ResourceBundle.getBundle(&quot;messages&quot;,</span></span>
<span class="line"><span>                new Locale(&quot;en&quot;,&quot;GB&quot;)).getString(&quot;test&quot;));</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        System.out.println(ResourceBundle.getBundle(&quot;messages&quot;,</span></span>
<span class="line"><span>                new Locale(&quot;zh&quot;,&quot;CN&quot;)).getString(&quot;test&quot;));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spring6国际化" tabindex="-1"><a class="header-anchor" href="#spring6国际化"><span>Spring6国际化</span></a></h2><h3 id="messagesource接口" tabindex="-1"><a class="header-anchor" href="#messagesource接口"><span>MessageSource接口</span></a></h3><p>spring中国际化是通过MessageSource这个接口来支持的</p><p><strong>常见实现类</strong></p><p><strong>ResourceBundleMessageSource</strong></p><p>这个是基于Java的ResourceBundle基础类实现，允许仅通过资源名加载国际化资源</p><p><strong>ReloadableResourceBundleMessageSource</strong></p><p>这个功能和第一个类的功能类似，多了定时刷新功能，允许在不重启系统的情况下，更新资源的信息</p><p><strong>StaticMessageSource</strong></p><p>它允许通过编程的方式提供国际化信息，一会我们可以通过这个来实现db中存储国际化信息的功能。</p><h3 id="使用spring6国际化" tabindex="-1"><a class="header-anchor" href="#使用spring6国际化"><span>使用Spring6国际化</span></a></h3><p><strong>第一步 创建资源文件</strong></p><p><strong>国际化文件命名格式：基本名称 _ 语言 _ 国家.properties</strong></p><p><strong>{0},{1}这样内容，就是动态参数</strong></p><p><strong>（1）创建codermast_en_US.properties</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>www.codermast.com=welcome {0},time:{1}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>（2）创建codermast_zh_CN.properties</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>www.codermast.com=欢迎 {0},时间:{1}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>第二步 创建spring配置文件，配置MessageSource</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>
<span class="line"><span>&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span class="line"><span>       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span>       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    &lt;bean id=&quot;messageSource&quot;</span></span>
<span class="line"><span>          class=&quot;org.springframework.context.support.ResourceBundleMessageSource&quot;&gt;</span></span>
<span class="line"><span>        &lt;property name=&quot;basenames&quot;&gt;</span></span>
<span class="line"><span>            &lt;list&gt;</span></span>
<span class="line"><span>                &lt;value&gt;codermast&lt;/value&gt;</span></span>
<span class="line"><span>            &lt;/list&gt;</span></span>
<span class="line"><span>        &lt;/property&gt;</span></span>
<span class="line"><span>        &lt;property name=&quot;defaultEncoding&quot; value=&quot;utf-8&quot;/&gt;</span></span>
<span class="line"><span>    &lt;/bean&gt;</span></span>
<span class="line"><span>&lt;/beans&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第三步 创建测试类</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>import org.springframework.context.ApplicationContext;</span></span>
<span class="line"><span>import org.springframework.context.annotation.AnnotationConfigApplicationContext;</span></span>
<span class="line"><span>import org.springframework.context.support.ClassPathXmlApplicationContext;</span></span>
<span class="line"><span>import java.util.Date;</span></span>
<span class="line"><span>import java.util.Locale;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public class Demo2 {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static void main(String[] args) {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        ApplicationContext context = new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        //传递动态参数，使用数组形式对应{0} {1}顺序</span></span>
<span class="line"><span>        Object[] objs = new Object[]{&quot;codermast&quot;,new Date().toString()};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        //www.codermast.com为资源文件的key值,</span></span>
<span class="line"><span>        //objs为资源文件value值所需要的参数,Local.CHINA为国际化为语言</span></span>
<span class="line"><span>        String str=context.getMessage(&quot;www.codermast.com&quot;, objs, Locale.CHINA);</span></span>
<span class="line"><span>        System.out.println(str);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',35)]))}const o=n(t,[["render",r]]),u=JSON.parse('{"path":"/framework/spring/xpveuqy1/","title":"Spring国际化i18n","lang":"zh-CN","frontmatter":{"title":"Spring国际化i18n","createTime":"2025/08/27 12:27:48","permalink":"/framework/spring/xpveuqy1/"},"readingTime":{"minutes":2.78,"words":833},"git":{"createdTime":1756736713000},"filePathRelative":"notes/framework/spring/Spring国际化i18n.md","headers":[]}');export{o as comp,u as data};
