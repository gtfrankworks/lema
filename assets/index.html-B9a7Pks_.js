import{a as s,c as a,b as t,o as h}from"./app-ZQgO6-gU.js";const n={};function l(d,i){return h(),a("div",null,i[0]||(i[0]=[t(`<h4 id="什么是数据模型" tabindex="-1"><a class="header-anchor" href="#什么是数据模型"><span>什么是数据模型？</span></a></h4><h2 id="数据模型就是通过创建一个逻辑化、物理化的模型-来提供一个同一个层面交流的目的。" tabindex="-1"><a class="header-anchor" href="#数据模型就是通过创建一个逻辑化、物理化的模型-来提供一个同一个层面交流的目的。"><span>数据模型就是通过创建一个逻辑化、物理化的模型，来提供一个同一个层面交流的目的。</span></a></h2><h2 id="数据模型设计的元素" tabindex="-1"><a class="header-anchor" href="#数据模型设计的元素"><span>数据模型设计的元素</span></a></h2><h4 id="实体-entity" tabindex="-1"><a class="header-anchor" href="#实体-entity"><span>实体(Entity)</span></a></h4><ul><li>描述业务的主要数据集合</li><li>谁，什么，何时，何地，为何，如何</li></ul><h4 id="属性-attribute" tabindex="-1"><a class="header-anchor" href="#属性-attribute"><span>属性(Attribute)</span></a></h4><ul><li>描述实体里面的单个信息</li></ul><h4 id="关系-relationship" tabindex="-1"><a class="header-anchor" href="#关系-relationship"><span>关系(Relationship)</span></a></h4><ul><li>描述实体与实体之间的数据规则</li><li>解构规则：1-N，N-1，N-N</li><li>引用规则</li></ul><hr><h2 id="数据模型设计基础" tabindex="-1"><a class="header-anchor" href="#数据模型设计基础"><span>数据模型设计基础</span></a></h2><details><summary>展开查看：传统模型设计对比</summary><table><thead><tr><th></th><th>模型概念 CDM</th><th>逻辑模型 LDM</th><th>物理模型 PDM</th></tr></thead><tbody><tr><td>目的</td><td>描述业务系统要管理的对象</td><td>基于概念模型，详细列出所有实体、实体的属性及关系</td><td>根据逻辑模型，结合数据库的物理结构，设计具体的表结构，字段及主外键</td></tr><tr><td>特点</td><td>概念名词描述业务，例如&quot;联系人&quot;</td><td>基于业务描述，和数据库无关</td><td>技术实现细节，和具体数据库类型相关</td></tr><tr><td>使用者</td><td>需求分析师</td><td>架构师、开发者</td><td>开发者、DBA</td></tr></tbody></table><blockquote><p>注意：关系型数据库遵循第三范式，例如联系人地址需将省、市、区单独存储。</p></blockquote></details><h4 id="mongodb文档模型设计的三个误区" tabindex="-1"><a class="header-anchor" href="#mongodb文档模型设计的三个误区"><span>MongoDB文档模型设计的三个误区</span></a></h4><ol><li>不需要设计模型</li><li>MongoDB 用一个超级大文档组织所有数据</li><li>MongoDB 不支持关联或事务</li></ol><h4 id="关于-json-文档模型设计" tabindex="-1"><a class="header-anchor" href="#关于-json-文档模型设计"><span>关于 JSON 文档模型设计</span></a></h4><ul><li>文档模型设计处于 <strong>物理模型阶段(PDM)</strong></li><li>JSON 文档通过内嵌数组或引用字段表示关系</li><li>不遵循第三范式，允许冗余</li></ul><h4 id="为什么说-mongodb-无模式" tabindex="-1"><a class="header-anchor" href="#为什么说-mongodb-无模式"><span>为什么说 MongoDB 无模式？</span></a></h4><ul><li>概念/逻辑建模依然需要</li><li>无模式只是省略物理建模的严格约束</li></ul><h4 id="文档模型设计原则" tabindex="-1"><a class="header-anchor" href="#文档模型设计原则"><span>文档模型设计原则</span></a></h4><ul><li><strong>性能 Performance</strong></li><li><strong>开发易用 Ease of Development</strong></li></ul><hr><h2 id="关系模型-vs-文档模型" tabindex="-1"><a class="header-anchor" href="#关系模型-vs-文档模型"><span>关系模型 VS 文档模型</span></a></h2><details><summary>展开对比表</summary><table><thead><tr><th></th><th>关系数据库</th><th>JSON文档模型</th></tr></thead><tbody><tr><td>模型设计层次</td><td>概念模型、逻辑模型、物理模型</td><td>概念模型、逻辑模型</td></tr><tr><td>模型实体</td><td>表</td><td>集合</td></tr><tr><td>模型属性</td><td>列</td><td>字段</td></tr><tr><td>模型关系</td><td>主外键</td><td>内嵌数组 / 引用字段</td></tr></tbody></table></details><hr><h2 id="mongodb文档模型设计三步曲" tabindex="-1"><a class="header-anchor" href="#mongodb文档模型设计三步曲"><span>MongoDB文档模型设计三步曲</span></a></h2><details><summary>展开查看：三步曲说明</summary><table><thead><tr><th>步骤</th><th>说明</th></tr></thead><tbody><tr><td>第1步</td><td>逻辑导向：集合、字段、基础形状</td></tr><tr><td>第2步</td><td>技术导向：引用、关联，优化工况</td></tr><tr><td>第3步</td><td>模式导向：套用成熟设计模式</td></tr></tbody></table></details><hr><h3 id="第1步-建立基础文档模型" tabindex="-1"><a class="header-anchor" href="#第1步-建立基础文档模型"><span>第1步：建立基础文档模型</span></a></h3><ol><li>概念模型 → 逻辑模型 → 找对象</li><li>明确实体关系及基数</li><li>决定内嵌 / 引用方式</li><li>完成基础模型</li></ol><blockquote><p>单文档最大 16MB</p></blockquote><hr><h3 id="第2步-根据读写工况细化" tabindex="-1"><a class="header-anchor" href="#第2步-根据读写工况细化"><span>第2步：根据读写工况细化</span></a></h3><ul><li>最常用的查询参数？</li><li>最频繁的写入模式？</li><li>读写比例？</li><li>数据量规模？</li></ul><p>场景优化：</p><ol><li>用 <strong>引用</strong> 避免性能瓶颈</li><li>用 <strong>冗余</strong> 提升查询性能</li></ol><p><strong>引用适用场景：</strong></p><ul><li>内嵌文档过大（MB 级或 &gt;16MB）</li><li>内嵌数组频繁修改</li><li>内嵌数组持续增长无上限</li></ul><blockquote><p>MongoDB <code>$lookup</code> 类似外连接，但无主外键约束，且不支持分片表。</p></blockquote><hr><h3 id="第3步-套用设计模式" tabindex="-1"><a class="header-anchor" href="#第3步-套用设计模式"><span>第3步：套用设计模式</span></a></h3><ul><li>文档模型 = 灵活无范式</li><li>设计模式 = 实战经验技巧</li></ul><p>示例：IoT 分桶模式 → 由每分钟存一条 → 改为每小时存一条，减少文档数量和索引开销。</p><hr><h2 id="mongodb设计模式集锦" tabindex="-1"><a class="header-anchor" href="#mongodb设计模式集锦"><span>MongoDB设计模式集锦</span></a></h2><table><thead><tr><th>表现形式类</th><th>数据访问类</th><th>组织结构类</th></tr></thead><tbody><tr><td>列转行</td><td>子集</td><td>预聚合</td></tr><tr><td>文档版本</td><td>近似处理</td><td>分桶</td></tr></tbody></table><hr><h3 id="列转行" tabindex="-1"><a class="header-anchor" href="#列转行"><span>列转行</span></a></h3><p>场景：大文档字段多、索引多<br> 方案：把多个国家上映日期拆成数组</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">releases</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">country</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">USA</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;"> &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">date</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2020/06/02</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">country</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CN</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;"> &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">date</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2020/06/01</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49)]))}const r=s(n,[["render",l]]),o=JSON.parse('{"path":"/nosqldb/mongodb/MongoDB%E6%96%87%E6%A1%A3%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/2juizrnj/","title":"MongoDB文档模型设计","lang":"zh-CN","frontmatter":{"title":"MongoDB文档模型设计","createTime":"2025/08/25 14:23:53","permalink":"/nosqldb/mongodb/MongoDB文档模型设计/2juizrnj/"},"readingTime":{"minutes":3.2,"words":960},"git":{"createdTime":1756736713000},"filePathRelative":"notes/nosqldb/mongodb/MongoDB文档模型.md","headers":[]}');export{r as comp,o as data};
