import{a as i,c as e,b as a,o as l}from"./app-ZQgO6-gU.js";const t={};function h(d,s){return l(),e("div",null,s[0]||(s[0]=[a(`<ul><li>码神岛：<a href="https://msd.misuland.com/pd/3691884927646700986" target="_blank" rel="noopener noreferrer">PostgreSQL的模式、表、空间、用户间的关系</a></li></ul><h3 id="什么是schema" tabindex="-1"><a class="header-anchor" href="#什么是schema"><span>什么是Schema？</span></a></h3><p>一个数据库包含一个或多个已命名的模式，模式又包含表。模式还可以包含其它对象， 包括数据<code>类型</code>、<code>函数</code>、<code>操作符</code>等。同一个对象名可以在不同的模式里使用而不会导致冲突； 比如，<code>herschema</code>和<code>myschema</code>都可以包含一个名为<code>mytable</code>的表。 和数据库不同，模式不是严格分离的：只要有权限，一个用户可以访问他所连接的数据库中的任意模式中的对象。</p><p>我们需要模式的原因有好多：</p><ul><li>允许多个用户使用一个数据库而不会干扰其它用户。</li><li>把数据库对象组织成逻辑组，让它们更便于管理。</li><li>第三方的应用可以放在不同的模式中，这样它们就不会和其它对象的名字冲突。</li></ul><p>模式类似于<a href="http://msd.misuland.com/pd/3691884927646699782" target="_blank" rel="noopener noreferrer">操作系统</a>层次的目录，只不过模式不能嵌套。</p><h3 id="什么是表空间" tabindex="-1"><a class="header-anchor" href="#什么是表空间"><span>什么是表空间?</span></a></h3><p>表空间是实际的数据存储的地方。一个数据库<code>schema</code>可能存在于多个表空间，相似地，一个表空间也可以为多个<code>schema</code>服务。</p><p>通过使用表空间，管理员可以控制磁盘的布局。表空间的最常用的作用是优化性能，例如，一个最常用的索引可以建立在非常快的硬盘上，而不太常用的表可以建立在便宜的硬盘上，比如用来存储用于进行归档文件的表。</p><h3 id="postgresql表空间、数据库、模式、表、用户、角色之间的关系" tabindex="-1"><a class="header-anchor" href="#postgresql表空间、数据库、模式、表、用户、角色之间的关系"><span>PostgreSQL表空间、数据库、模式、表、用户、角色之间的关系</span></a></h3><h4 id="角色与用户的关系" tabindex="-1"><a class="header-anchor" href="#角色与用户的关系"><span>角色与用户的关系</span></a></h4><p>在<code>PostgreSQL</code>中，存在两个容易混淆的概念：角色/用户。之所以说这两个概念容易混淆，是因为对于PostgreSQL来说，这是完全相同的两个对象。唯一的区别是在创建的时候：</p><ol><li>我用下面的<code>psql</code>创建了角色<code>custom</code>:</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> ROLE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">PASSWORD</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">custom</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>接着我使用新创建的角色custom登录，PostgreSQL给出拒绝信息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>FATAL：role &#39;custom&#39; is not permitted to log in.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><em>说明该角色没有登录权限，系统拒绝其登录</em></p><ol><li>我又使用下面的<code>psql</code>创建了用户<code>guest</code>:</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> USER</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> guest</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> PASSWORD</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">guest</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><em>接着我使用guest登录，登录成功</em></p><p>难道这两者有区别吗？查看文档，又这么一段说明：CREATE USER is the same as CREATE ROLE except that it implies LOGIN. ----<code>CREATE USER</code>除了默认具有<code>LOGIN</code>权限之外，其他与<code>CREATE ROLE</code>是完全相同的。</p><p>为了验证这句话，修改<code>custom</code>的权限，增加<code>LOGIN</code>权限：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ALTER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> ROLE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LOGIN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>再次用<code>custom</code>登录，成功！那么事情就明了了：</p><p>CREATE ROLE custom PASSWORD &#39;custom&#39; LOGIN 等同于 CREATE USER custom PASSWORD &#39;custom&#39;.</p><p>这就是<code>ROLE/USER</code>的区别。</p><h4 id="数据库与模式的关系" tabindex="-1"><a class="header-anchor" href="#数据库与模式的关系"><span>数据库与模式的关系</span></a></h4><p><code>模式(schema)</code>是对数据库(database)逻辑分割。</p><p>在数据库创建的同时，就已经默认为数据库创建了一个模式--<code>public</code>，这也是该数据库的默认模式。所有为此数据库创建的对象(表、函数、试图、索引、序列等)都是创建在这个模式中的：</p><ol><li>创建一个数据库mars</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> mars</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>用<code>custom</code>角色登录到<code>mars</code>数据库,查看数据库中的所有模式：\\dn</li></ol><p>显示结果只有<code>public</code>一个模式。</p><ol><li>创建一张测试表</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> test</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(id </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">integer</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> not null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>查看当前数据库的列表：\\d;</li></ol><p>显示结果是表test属于模式<code>public</code>.也就是<code>test</code>表被默认创建在了public模式中。</p><ol><li>创建一个新模式<code>custom</code>，对应于登录用户<code>custom</code>：</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> SCHEMA</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> custom</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ALTER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> SCHEMA</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OWNER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>再次创建一张<code>test</code>表，这次这张表要指明模式</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> custom</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.test (id </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">integer</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> not null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>查看当前数据库的列表： \\d</li></ol><p>显示结果是表<code>test</code>属于模式<code>custom</code>.也就是这个<code>test</code>表被创建在了<code>custom模式</code>中。</p><p>得出结论是：数据库是被模式(schema)来切分的，一个数据库至少有一个模式，所有数据库内部的对象(object)是被创建于模式的。用户登录到系统，连接到一个数据库后，是通过该数据库的search_path来寻找schema的搜索顺序，可以通过命令<code>SHOW search_path</code>；具体的顺序，也可以通过<code>SET search_path TO &#39;schema_name&#39;</code>来修改顺序。</p><blockquote><p>官方建议是这样的：在管理员创建一个具体数据库后，应该为所有可以连接到该数据库的用户分别创建一个与用户名相同的模式，然后，将<code>search_path</code>设置为<code>$user</code>，即默认的模式是与用户名相同的模式。</p></blockquote><h4 id="表空间与数据库的关系" tabindex="-1"><a class="header-anchor" href="#表空间与数据库的关系"><span>表空间与数据库的关系</span></a></h4><p>数据库创建语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dbname</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>默认的数据库所有者是当前创建数据库的角色，默认的表空间是系统的默认表空间pg_default。</p><p>为什么是这样的呢？</p><p>因为在<code>PostgreSQL</code>中，数据的创建是通过克隆数据库模板来实现的，这与SQL SERVER是同样的机制。由于<code>CREATE DATABASE dbname</code>并没有指明数据库模板，所以系统将默认克隆<code>template1</code>数据库，得到新的数据库<code>dbname</code>。(By default, the new database will be created by cloning the standard system database template1)</p><p><code>template1</code>数据库的默认表空间是<code>pg_default</code>，这个表空间是在数据库初始化时创建的，所以所有<code>template1</code>中的对象将被同步克隆到新的数据库中。</p><p>相对完整的语法应该是这样的：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dbname</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> TEMPLATE template1 TABLESPACE tablespacename;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ALTER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> dbname </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OWNER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>连接到<code>template1</code>数据库，创建一个表作为标记：</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> test</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(id </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">integer</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> not null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>向表中插入数据</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">INSERT INTO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> test </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">VALUES</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>创建一个表空间:</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TABLESPACE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> tsmars</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> OWNER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LOCATION</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/tmp/data/tsmars</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在此之前应该确保目录**/tmp/data/tsmars**存在，并且目录为空。</p><ol><li>创建一个数据库，指明该数据库的表空间是刚刚创建的<code>tsmars</code>：</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dbmars</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> TEMPLATE template1 OWNERE custom TABLESPACE tsmars;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ALTER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> dbmars </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OWNER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> TO</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> custom;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>查看系统中所有数据库的信息：\\l+</li></ol><p>可以发现，<code>dbmars</code>数据库的表空间是<code>tsmars</code>,拥有者是<code>custom</code>;</p><p>仔细分析后，不难得出结论：</p><p>在PostgreSQL中，表空间是一个目录，里面存储的是它所包含的数据库的各种物理文件。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>表空间是一个存储区域，在一个表空间中可以存储多个数据库，尽管PostgreSQL不建议这么做，但我们这么做完全可行。一个数据库并不知直接存储表结构等对象的，而是在数据库中逻辑创建了至少一个模式，在模式中创建了表等对象，将不同的模式指派该不同的角色，可以实现权限分离，又可以通过授权，实现模式间对象的共享，并且还有一个特点就是：public模式可以存储大家都需要访问的对象。</p><p>表空间用于定义数据库对象在物理存储设备上的位置，不特定于某个单独的数据库。数据库是数据库对象的物理集合，而<code>schema</code>则是数据库内部用于组织管理数据库对象的逻辑集合，schema名字空间之下则是各种应用程序会接触到的对象，比如表、索引、数据类型、函数、操作符等。</p><p>角色(用户)则是数据库<a href="http://msd.misuland.com/pd/3691884927646700952" target="_blank" rel="noopener noreferrer">服务器</a>(集群)全局范围内的权限控制系统，用于各种集群范围内所有的对象权限管理。因此角色不特定于某个单独的数据库，但角色如果需要登录数据库管理系统则必须连接到一个数据库上。角色可以拥有各种数据库对象。</p>`,71)]))}const k=i(t,[["render",h]]),r=JSON.parse('{"path":"/PostgreSQL/lnzo42e8/","title":"PostgreSQL的模式、表、空间、用户间的关系","lang":"zh-CN","frontmatter":{"title":"PostgreSQL的模式、表、空间、用户间的关系","createTime":"2025/08/26 15:13:11","permalink":"/PostgreSQL/lnzo42e8/"},"readingTime":{"minutes":6.71,"words":2014},"git":{"createdTime":1756736713000},"filePathRelative":"notes/PostgreSQL/PostgreSQL的模式和关系.md","headers":[]}');export{k as comp,r as data};
