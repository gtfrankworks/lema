import{a as d,c as e,b as o,o as c}from"./app-ZQgO6-gU.js";const r={};function a(i,t){return c(),e("div",null,t[0]||(t[0]=[o('<h2 id="_1-1-日期-时间操作符" tabindex="-1"><a class="header-anchor" href="#_1-1-日期-时间操作符"><span>1.1 日期/时间操作符</span></a></h2><p>下表演示了基本算术操作符的行为(+,*, 等)：</p><table><thead><tr><th>操作符</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td><code>+</code></td><td><code>date &#39;2001-09-28&#39; + integer &#39;7&#39;</code></td><td><code>date &#39;2001-10-05&#39;</code></td></tr><tr><td><code>+</code></td><td><code>date &#39;2001-09-28&#39; + interval &#39;1 hour&#39;</code></td><td><code>timestamp &#39;2001-09-28 01:00:00&#39;</code></td></tr><tr><td><code>+</code></td><td><code>date &#39;2001-09-28&#39; + time &#39;03:00&#39;</code></td><td><code>timestamp &#39;2001-09-28 03:00:00&#39;</code></td></tr><tr><td><code>+</code></td><td><code>interval &#39;1 day&#39; + interval &#39;1 hour&#39;</code></td><td><code>interval &#39;1 day 01:00:00&#39;</code></td></tr><tr><td><code>+</code></td><td><code>timestamp &#39;2001-09-28 01:00&#39; + interval &#39;23 hours&#39;</code></td><td><code>timestamp &#39;2001-09-29 00:00:00&#39;</code></td></tr><tr><td><code>+</code></td><td><code>time &#39;01:00&#39; + interval &#39;3 hours&#39;</code></td><td><code>time &#39;04:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>- interval &#39;23 hours&#39;</code></td><td><code>interval &#39;-23:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>date &#39;2001-10-01&#39; - date &#39;2001-09-28&#39;</code></td><td><code>integer &#39;3&#39;</code> (days)</td></tr><tr><td><code>-</code></td><td><code>date &#39;2001-10-01&#39; - integer &#39;7&#39;</code></td><td><code>date &#39;2001-09-24&#39;</code></td></tr><tr><td><code>-</code></td><td><code>date &#39;2001-09-28&#39; - interval &#39;1 hour&#39;</code></td><td><code>timestamp &#39;2001-09-27 23:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>time &#39;05:00&#39; - time &#39;03:00&#39;</code></td><td><code>interval &#39;02:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>time &#39;05:00&#39; - interval &#39;2 hours&#39;</code></td><td><code>time &#39;03:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>timestamp &#39;2001-09-28 23:00&#39; - interval &#39;23 hours&#39;</code></td><td><code>timestamp &#39;2001-09-28 00:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>interval &#39;1 day&#39; - interval &#39;1 hour&#39;</code></td><td><code>interval &#39;1 day -01:00:00&#39;</code></td></tr><tr><td><code>-</code></td><td><code>timestamp &#39;2001-09-29 03:00&#39; - timestamp &#39;2001-09-27 12:00&#39;</code></td><td><code>interval &#39;1 day 15:00:00&#39;</code></td></tr><tr><td><code>*</code></td><td><code>900 * interval &#39;1 second&#39;</code></td><td><code>interval &#39;00:15:00&#39;</code></td></tr><tr><td><code>*</code></td><td><code>21 * interval &#39;1 day&#39;</code></td><td><code>interval &#39;21 days&#39;</code></td></tr><tr><td><code>*</code></td><td><code>double precision &#39;3.5&#39; * interval &#39;1 hour&#39;</code></td><td><code>interval &#39;03:30:00&#39;</code></td></tr><tr><td><code>/</code></td><td><code>interval &#39;1 hour&#39; / double precision &#39;1.5&#39;</code></td><td><code>interval &#39;00:40:00&#39;</code></td></tr></tbody></table><h2 id="_1-2-日期-时间函数" tabindex="-1"><a class="header-anchor" href="#_1-2-日期-时间函数"><span>1.2 日期/时间函数</span></a></h2><table><thead><tr><th>函数</th><th>返回类型</th><th>描述</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td><code>age(timestamp, timestamp)</code></td><td><code>interval</code></td><td>减去参数后的&quot;符号化&quot;结果，使用年和月，不只是使用天</td><td><code>age(timestamp &#39;2001-04-10&#39;, timestamp &#39;1957-06-13&#39;)</code></td><td><code>43 years 9 mons 27 days</code></td></tr><tr><td><code>age(timestamp)</code></td><td><code>interval</code></td><td>从<code>current_date</code>减去参数后的结果（在午夜）</td><td><code>age(timestamp &#39;1957-06-13&#39;)</code></td><td><code>43 years 8 mons 3 days</code></td></tr><tr><td><code>clock_timestamp()</code></td><td><code>timestamp with time zone</code></td><td>实时时钟的当前时间戳（在语句执行时变化）</td><td></td><td></td></tr><tr><td><code>current_date</code></td><td><code>date</code></td><td>当前的日期；</td><td></td><td></td></tr><tr><td><code>current_time</code></td><td><code>time with time zone</code></td><td>当日时间；</td><td></td><td></td></tr><tr><td><code>current_timestamp</code></td><td><code>timestamp with time zone</code></td><td>当前事务开始时的时间戳；</td><td></td><td></td></tr><tr><td><code>date_part(text, timestamp)</code></td><td><code>double precision</code></td><td>获取子域(等效于<code>extract</code>)；</td><td><code>date_part(&#39;hour&#39;, timestamp &#39;2001-02-16 20:38:40&#39;)</code></td><td><code>20</code></td></tr><tr><td><code>date_part(text, interval)</code></td><td><code>double precision</code></td><td>获取子域(等效于<code>extract</code>)；</td><td><code>date_part(&#39;month&#39;, interval &#39;2 years 3 months&#39;)</code></td><td><code>3</code></td></tr><tr><td><code>date_trunc(text, timestamp)</code></td><td><code>timestamp</code></td><td>截断成指定的精度；</td><td><code>date_trunc(&#39;hour&#39;, timestamp &#39;2001-02-16 20:38:40&#39;)</code></td><td><code>2001-02-16 20:00:00</code></td></tr><tr><td><code>date_trunc(text, interval)</code></td><td><code>interval</code></td><td>截取指定的精度，</td><td><code>date_trunc(&#39;hour&#39;, interval &#39;2 days 3 hours 40 minutes&#39;)</code></td><td><code>2 days 03:00:00</code></td></tr><tr><td><code>extract(field from timestamp)</code></td><td><code>double precision</code></td><td>获取子域；</td><td><code>extract(hour from timestamp &#39;2001-02-16 20:38:40&#39;)</code></td><td><code>20</code></td></tr><tr><td><code>extract(field from interval)</code></td><td><code>double precision</code></td><td>获取子域；</td><td><code>extract(month from interval &#39;2 years 3 months&#39;)</code></td><td><code>3</code></td></tr><tr><td><code>isfinite(date)</code></td><td><code>boolean</code></td><td>测试是否为有穷日期(不是 +/-无穷)</td><td><code>isfinite(date &#39;2001-02-16&#39;)</code></td><td><code>true</code></td></tr><tr><td><code>isfinite(timestamp)</code></td><td><code>boolean</code></td><td>测试是否为有穷时间戳(不是 +/-无穷)</td><td><code>isfinite(timestamp &#39;2001-02-16 21:28:30&#39;)</code></td><td><code>true</code></td></tr><tr><td><code>isfinite(interval)</code></td><td><code>boolean</code></td><td>测试是否为有穷时间间隔</td><td><code>isfinite(interval &#39;4 hours&#39;)</code></td><td><code>true</code></td></tr><tr><td><code>justify_days(interval)</code></td><td><code>interval</code></td><td>按照每月 30 天调整时间间隔</td><td><code>justify_days(interval &#39;35 days&#39;)</code></td><td><code>1 mon 5 days</code></td></tr><tr><td><code>justify_hours(interval)</code></td><td><code>interval</code></td><td>按照每天 24 小时调整时间间隔</td><td><code>justify_hours(interval &#39;27 hours&#39;)</code></td><td><code>1 day 03:00:00</code></td></tr><tr><td><code>justify_interval(interval)</code></td><td><code>interval</code></td><td>使用<code>justify_days</code>和<code>justify_hours</code>调整时间间隔的同时进行正负号调整</td><td><code>justify_interval(interval &#39;1 mon -1 hour&#39;)</code></td><td><code>29 days 23:00:00</code></td></tr><tr><td><code>localtime</code></td><td><code>time</code></td><td>当日时间；</td><td></td><td></td></tr><tr><td><code>localtimestamp</code></td><td><code>timestamp</code></td><td>当前事务开始时的时间戳；</td><td></td><td></td></tr><tr><td><code>make_date(year int,month int,day int) </code></td><td><code>date</code></td><td>为年、月和日字段创建日期</td><td><code>make_date(2013, 7, 15)</code></td><td><code>2013-07-15</code></td></tr><tr><td><code>make_interval(years int DEFAULT 0,months int DEFAULT 0, weeks int DEFAULT 0,days int DEFAULT 0, hours int DEFAULT 0,mins int DEFAULT 0,secs double precision DEFAULT 0.0) </code></td><td><code>interval</code></td><td>从年、月、周、天、小时、分钟和秒字段中创建间隔</td><td><code>make_interval(days := 10)</code></td><td><code>10 days</code></td></tr><tr><td><code>make_time(hour int, min int,sec double precision)</code></td><td><code>time</code></td><td>从小时、分钟和秒字段中创建时间</td><td><code>make_time(8, 15, 23.5)</code></td><td><code>08:15:23.5</code></td></tr><tr><td><code> make_timestamp(year int, month int,day int,hour int,min int,sec double precision)</code></td><td><code>timestamp</code></td><td>从年、月、日、小时、分钟和秒字段中创建时间戳</td><td><code>make_timestamp(2013, 7, 15, 8, 15, 23.5)</code></td><td><code>2013-07-15 08:15:23.5</code></td></tr><tr><td><code>make_timestamptz(year int,month int,day int,hour int,min int,sec double precision,[timezone text ]) </code></td><td><code>timestamp with time zone</code></td><td>从年、月、日、小时、分钟和秒字段中创建带有时区的时间戳。 没有指定<code>timezone</code>时，使用当前的时区。</td><td><code>make_timestamptz(2013, 7, 15, 8, 15, 23.5)</code></td><td><code>2013-07-15 08:15:23.5+01</code></td></tr><tr><td><code>now()</code></td><td><code>timestamp with time zone</code></td><td>当前事务开始时的时间戳；</td><td></td><td></td></tr><tr><td><code>statement_timestamp()</code></td><td><code>timestamp with time zone</code></td><td>实时时钟的当前时间戳；</td><td></td><td></td></tr><tr><td><code>timeofday()</code></td><td><code>text</code></td><td>与<code>clock_timestamp</code>相同，但结果是一个<code>text</code> 字符串；</td><td></td><td></td></tr><tr><td><code>transaction_timestamp()</code></td><td><code>timestamp with time zone</code></td><td>当前事务开始时的时间戳；</td><td></td><td></td></tr></tbody></table>',5)]))}const m=d(r,[["render",a]]),s=JSON.parse('{"path":"/PostgreSQL/7oquijwj/","title":"PostgreSQL时间日期函数和操作符 ","lang":"zh-CN","frontmatter":{"title":"PostgreSQL时间日期函数和操作符 ","createTime":"2025/08/26 15:13:11","permalink":"/PostgreSQL/7oquijwj/"},"readingTime":{"minutes":3.41,"words":1024},"git":{"createdTime":1756736713000},"filePathRelative":"notes/PostgreSQL/PostgreSQL时间日期函数和操作符.md","headers":[]}');export{m as comp,s as data};
