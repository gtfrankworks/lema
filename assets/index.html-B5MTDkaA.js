import{a as s,c as a,b as n,o as i}from"./app-ZQgO6-gU.js";const l={};function d(r,e){return i(),a("div",null,e[0]||(e[0]=[n(`<p><a href="http://www.martinfowler.com/eaaCatalog/activeRecord.html" target="_blank" rel="noopener noreferrer">Active Record</a> 模式出自 Martin Fowler 写的《<a href="https://book.douban.com/subject/4826290/" target="_blank" rel="noopener noreferrer">企业应用架构模式</a>》书中。在 Active Record 模式中，对象中既有持久存储的数据，也有针对数据的操作。Active Record 模式把数据存取逻辑作为对象的一部分，处理对象的用户知道如何把数据写入数据库，还知道如何从数据库中读出数据。</p><p>在 MyBatis-Flex 中实现 Active Record 功能十分简单，只需让 Entity 类继承 <a href="https://gitee.com/mybatis-flex/mybatis-flex/blob/main/mybatis-flex-core/src/main/java/com/mybatisflex/core/activerecord/Model.java" target="_blank" rel="noopener noreferrer">Model</a> 即可。</p><p>注意事项</p><ul><li>使用 Active Record 功能时，项目中必须注入对应实体类的 BaseMapper 对象。</li><li>如果不想手动创建 Mapper 接口，可以使用 <a href="https://mybatis-flex.com/zh/others/codegen.html" target="_blank" rel="noopener noreferrer">代码生成器</a> 或 <a href="https://mybatis-flex.com/zh/others/apt.html#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%92%8C%E9%80%89%E9%A1%B9" target="_blank" rel="noopener noreferrer">APT</a> 辅助生成。</li></ul><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h2><p>在以下示例当中，使用了 <a href="https://www.projectlombok.org/" target="_blank" rel="noopener noreferrer">Lombok</a> 对实体类进行了增强，以便我们全链式调用：</p><ol><li><code>@Table</code> 标记了实体类对应的数据表。</li><li><code>@Data</code> 为我们生成了 setter/getter、toString、equals、hashCode 等方法， 其中 <code>staticConstructor = &quot;create&quot;</code> 为我们创建了一个 <code>create()</code> 静态方法用于链式调用。</li><li><code>@Accessors(chain = true)</code> 为我们开启了 <code>return this;</code> 这样既可以被序列化，又可以链式调用。</li></ol><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@Table(&quot;tb_account&quot;)</span></span>
<span class="line"><span>@Accessors(chain = true)</span></span>
<span class="line"><span>@Data(staticConstructor = &quot;create&quot;)</span></span>
<span class="line"><span>public class Account extends Model&lt;Account&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Id(keyType = KeyType.Auto)</span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span>    private String userName;</span></span>
<span class="line"><span>    private Integer age;</span></span>
<span class="line"><span>    private Date birthday;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就可以流畅的使用 Active Record 功能了：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@RestController</span></span>
<span class="line"><span>@RequestMapping(&quot;/account&quot;)</span></span>
<span class="line"><span>public class AccountController {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @PostMapping(&quot;save&quot;)</span></span>
<span class="line"><span>    public boolean save(@RequestBody Account account) {</span></span>
<span class="line"><span>        return account.save();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="保存数据" tabindex="-1"><a class="header-anchor" href="#保存数据"><span>保存数据</span></a></h2><p><code>Model</code> 提供了 <code>save</code> 方法来保存数据，调用该方法前需要将保存数据填充：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .setUserName(&quot;张三&quot;)</span></span>
<span class="line"><span>    .setAge(18)</span></span>
<span class="line"><span>    .setBirthday(new Date())</span></span>
<span class="line"><span>    .save();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h2><p><code>Model</code> 提供了 <code>remove</code> 方法来删除数据：</p><ul><li>根据主键删除</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .setId(1L)</span></span>
<span class="line"><span>    .removeById();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>根据条件删除</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .where(Account::getId).eq(1L)</span></span>
<span class="line"><span>    .remove();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h2><p><code>Model</code> 提供了 <code>update</code> 方法来更新数据，调用该方法前需要将更新数据填充：</p><ul><li>根据主键更新</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .setId(1L)</span></span>
<span class="line"><span>    .setAge(100)</span></span>
<span class="line"><span>    .updateById();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>根据条件更新</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .setAge(100)</span></span>
<span class="line"><span>    .where(Account::getId).eq(1L)</span></span>
<span class="line"><span>    .update();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据"><span>查询数据</span></a></h2><h3 id="查询一条数据" tabindex="-1"><a class="header-anchor" href="#查询一条数据"><span>查询一条数据</span></a></h3><p><code>Model</code> 提供了 <code>one</code> 方法来查询一条数据：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .where(Account::getId).eq(1L)</span></span>
<span class="line"><span>    .one();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询多条数据" tabindex="-1"><a class="header-anchor" href="#查询多条数据"><span>查询多条数据</span></a></h3><p><code>Model</code> 提供了 <code>list</code> 方法来查询多条数据：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .where(Account::getAge).ge(18)</span></span>
<span class="line"><span>    .list();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询单列数据" tabindex="-1"><a class="header-anchor" href="#查询单列数据"><span>查询单列数据</span></a></h3><p><code>Model</code> 提供了 <code>obj</code> 方法来查询单列数据：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .select(Account::getUserName) // 只查询 user_name 列数据</span></span>
<span class="line"><span>    .where(Account::getAge).ge(18)</span></span>
<span class="line"><span>    .objList();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询分页数据" tabindex="-1"><a class="header-anchor" href="#查询分页数据"><span>查询分页数据</span></a></h3><p><code>Model</code> 提供了 <code>page</code> 方法来查询分页数据：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .where(Account::getAge).ge(18)</span></span>
<span class="line"><span>    .page(Page.of(1,10));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关联查询-v1-5-5" tabindex="-1"><a class="header-anchor" href="#关联查询-v1-5-5"><span>关联查询 v1.5.5</span></a></h2><p><code>Model</code> 提供了三种方式实现多表关联查询，例如：用户与角色的关系：</p><ul><li>（默认）通过 <a href="https://mybatis-flex.com/zh/base/relations-query.html#%E6%96%B9%E6%A1%88-3-join-query" target="_blank" rel="noopener noreferrer">Joins Query</a> 联表方式查询数据：</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>User.create()</span></span>
<span class="line"><span>    .select(USER.ALL_COLUMNS,ROLE.ALL_COLUMNS)</span></span>
<span class="line"><span>    .leftJoin(USER_ROLE.as(&quot;ur&quot;)).on(USER_ROLE.USER_ID.eq(USER.USER_ID))</span></span>
<span class="line"><span>    .leftJoin(ROLE.as(&quot;r&quot;)).on(USER_ROLE.ROLE_ID.eq(ROLE.ROLE_ID))</span></span>
<span class="line"><span>    .where(USER.USER_ID.eq(1))</span></span>
<span class="line"><span>    .one();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>获取更多关于 <code>Joins Query</code> 的信息，请点击 <a href="https://mybatis-flex.com/zh/base/relations-query.html#%E6%96%B9%E6%A1%88-3-join-query" target="_blank" rel="noopener noreferrer">这里</a></p></blockquote><ul><li>通过 <a href="https://mybatis-flex.com/zh/base/relations-query.html#%E6%96%B9%E6%A1%88-1relations-%E6%B3%A8%E8%A7%A3" target="_blank" rel="noopener noreferrer">Relations Query</a> 的方式查询数据：</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>User.create()</span></span>
<span class="line"><span>    .where(USER.USER_ID.eq(1))</span></span>
<span class="line"><span>    .withRelations() // 使用 Relations Query 的方式进行关联查询。</span></span>
<span class="line"><span>    .maxDepth(3) // 设置父子关系查询中，默认的递归查询深度。</span></span>
<span class="line"><span>    .ignoreRelations(&quot;orderList&quot;) // 忽略查询部分 Relations 注解标记的属性。</span></span>
<span class="line"><span>    .extraConditionParam(&quot;id&quot;, 100) // 添加额外的 Relations 查询条件。</span></span>
<span class="line"><span>    .one();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>获取更多关于 <code>Relations Query</code> 的信息，请点击 <a href="https://mybatis-flex.com/zh/base/relations-query.html#%E6%96%B9%E6%A1%88-1relations-%E6%B3%A8%E8%A7%A3" target="_blank" rel="noopener noreferrer">这里</a></p></blockquote><ul><li>通过 <a href="https://mybatis-flex.com/zh/base/relations-query.html#%E6%96%B9%E6%A1%88-1relations-%E6%B3%A8%E8%A7%A3" target="_blank" rel="noopener noreferrer">Fields Query</a> 的方式查询数据：</li></ul><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>User.create()</span></span>
<span class="line"><span>    .where(USER.USER_ID.eq(1))</span></span>
<span class="line"><span>    .withFields() // 使用 Fields Query 的方式进行关联查询。</span></span>
<span class="line"><span>    .fieldMapping(User::getRoleList, user -&gt; // 设置属性对应的 QueryWrapper 查询。</span></span>
<span class="line"><span>        QueryWrapper.create()</span></span>
<span class="line"><span>            .select()</span></span>
<span class="line"><span>            .from(ROLE)</span></span>
<span class="line"><span>            .where(ROLE.ROLE_ID.in(</span></span>
<span class="line"><span>                QueryWrapper.create()</span></span>
<span class="line"><span>                .select(USER_ROLE.ROLE_ID)</span></span>
<span class="line"><span>                .from(USER_ROLE)</span></span>
<span class="line"><span>                .where(USER_ROLE.USER_ID.eq(user.getUserId()))</span></span>
<span class="line"><span>        )))</span></span>
<span class="line"><span>    .one();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>获取更多关于 <code>Fields Query</code> 的信息，请点击 <a href="https://mybatis-flex.com/zh/base/relations-query.html#%E6%96%B9%E6%A1%88-2field-query" target="_blank" rel="noopener noreferrer">这里</a></p></blockquote><h2 id="回调方法-v1-5-9" tabindex="-1"><a class="header-anchor" href="#回调方法-v1-5-9"><span>回调方法 v1.5.9</span></a></h2><p>有些情况下，我们在操作完数据库后，还需要继续使用实体类的内容，例如：获取插入数据后返回的主键。此时这些返回值为 <code>boolean</code> 的方法就不满足我们的需求了， 应该使用 <code>xxxOpt</code> 方法，在操作数据库执行成功之后返回 <code>Optional.of(this)</code>，执行失败返回 <code>Optional.empty()</code>。这样就可以进行链式的调用了。</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>// 插入成功之后返回主键信息</span></span>
<span class="line"><span>Account.create()</span></span>
<span class="line"><span>    .setUserName(&quot;张三&quot;)</span></span>
<span class="line"><span>    .setAge(18)</span></span>
<span class="line"><span>    .setBirthday(new Date())</span></span>
<span class="line"><span>    .saveOpt()</span></span>
<span class="line"><span>    .orElseThrow(RuntimeException::new) // 保存失败抛出异常</span></span>
<span class="line"><span>    .getId();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,67)]))}const t=s(l,[["render",d]]),c=JSON.parse('{"path":"/framework/mybatisflex/base/pdqlpnfm/","title":"ActiveRecord","lang":"zh-CN","frontmatter":{"title":"ActiveRecord","createTime":"2025/08/26 17:30:52","permalink":"/framework/mybatisflex/base/pdqlpnfm/"},"readingTime":{"minutes":3.75,"words":1124},"git":{"createdTime":1756736713000},"filePathRelative":"notes/framework/mybatisflex/base/ActiveRecord.md","headers":[]}');export{t as comp,c as data};
