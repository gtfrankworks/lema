import{a,c as n,b as e,o as i}from"./app-ZQgO6-gU.js";const l={};function p(d,s){return i(),n("div",null,s[0]||(s[0]=[e(`<p>在 MyBatis-Flex 中，内置了 <code>QueryChain.java</code> 、 <code>UpdateChain.java</code> 以及 <code>DbChain.java</code> 用于对数据进行链式查询操作和链式操作（修改和删除）。</p><ul><li><strong>QueryChain</strong>：链式查询</li><li><strong>UpdateChain</strong>：链式更新</li><li><strong>DbChain</strong>：链式调用 <a href="https://mybatis-flex.com/zh/base/db-row.html" target="_blank" rel="noopener noreferrer">Db + Row</a></li></ul><h2 id="querychain-示例" tabindex="-1"><a class="header-anchor" href="#querychain-示例"><span>QueryChain 示例</span></a></h2><p>例如，查询文章列表代码如下：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@SpringBootTest</span></span>
<span class="line"><span>class ArticleServiceTest {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Autowired</span></span>
<span class="line"><span>    ArticleService articleService;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Test</span></span>
<span class="line"><span>    void testChain() {</span></span>
<span class="line"><span>        List&lt;Article&gt; articles = articleService.queryChain()</span></span>
<span class="line"><span>            .select(ARTICLE.ALL_COLUMNS)</span></span>
<span class="line"><span>            .from(ARTICLE)</span></span>
<span class="line"><span>            .where(ARTICLE.ID.ge(100))</span></span>
<span class="line"><span>            .list();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若不是在 Service 中，我们也可以通过 <code>QueryChain.of(mapper)</code> 方法，自己创建一个 <code>QueryChain</code> 实例，代码如下：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>List&lt;Article&gt; articles = QueryChain.of(mapper)</span></span>
<span class="line"><span>    .select(ARTICLE.ALL_COLUMNS)</span></span>
<span class="line"><span>    .from(ARTICLE)</span></span>
<span class="line"><span>    .where(ARTICLE.ID.ge(100))</span></span>
<span class="line"><span>    .list();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updatechain-示例" tabindex="-1"><a class="header-anchor" href="#updatechain-示例"><span>UpdateChain 示例</span></a></h2><p>假设我们要更新 <code>Account</code> 的 <code>userName</code> 为 &quot;<code>张三</code>&quot;，更新年龄在之前的基础上加 1，更新代码如下：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@Test</span></span>
<span class="line"><span>public void testUpdateChain1() {</span></span>
<span class="line"><span>    UpdateChain.of(Account.class)</span></span>
<span class="line"><span>        .set(Account::getUserName, &quot;张三&quot;)</span></span>
<span class="line"><span>        .setRaw(Account::getAge, &quot;age + 1&quot;)</span></span>
<span class="line"><span>        .where(Account::getId).eq(1)</span></span>
<span class="line"><span>        .update();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上方法调用时，MyBatis-Flex 内部执行的 SQL 如下：</p><p>sql</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>UPDATE \`tb_account\` SET \`user_name\` = &#39;张三&#39; , \`age\` = age + 1</span></span>
<span class="line"><span>WHERE \`id\` = 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>另一个示例：</strong></p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@Test</span></span>
<span class="line"><span>public void testUpdateChain2() {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //更新数据</span></span>
<span class="line"><span>    UpdateChain.of(Account.class)</span></span>
<span class="line"><span>        .set(Account::getAge, ACCOUNT.AGE.add(1))</span></span>
<span class="line"><span>        .where(Account::getId).ge(100)</span></span>
<span class="line"><span>        .and(Account::getAge).eq(18)</span></span>
<span class="line"><span>        .update();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //查询所有数据并打印</span></span>
<span class="line"><span>    QueryChain.of(accountMapper)</span></span>
<span class="line"><span>        .where(Account::getId).ge(100)</span></span>
<span class="line"><span>        .and(Account::getAge).eq(18)</span></span>
<span class="line"><span>        .list()</span></span>
<span class="line"><span>        .forEach(System.out::println);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 <code>UpdateChain</code> 进行 <code>update()</code>，其执行的 SQL 如下：</p><p>sql</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>UPDATE \`tb_account\` SET \`age\` = \`age\` + 1</span></span>
<span class="line"><span>WHERE  \`id\` &gt;= 100 AND \`age\` = 18</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="querychain-的方法" tabindex="-1"><a class="header-anchor" href="#querychain-的方法"><span>QueryChain 的方法</span></a></h2><ul><li>one()：获取一条数据</li><li>list()：获取多条数据</li><li>page()：分页查询</li><li>obj()：当 SQL 查询只返回 1 列数据的时候，且只有 1 条数据时，可以使用此方法</li><li>objList()：当 SQL 查询只返回 1 列数据的时候，可以使用此方法</li><li>count()：查询数据条数</li><li>exists()：是否存在，判断 count 是否大于 0</li></ul><h2 id="querychain-扩展方法" tabindex="-1"><a class="header-anchor" href="#querychain-扩展方法"><span>QueryChain 扩展方法</span></a></h2><h3 id="one-系列方法" tabindex="-1"><a class="header-anchor" href="#one-系列方法"><span><code>one()</code> 系列方法</span></a></h3><ul><li>one()：获取一条数据</li><li>oneAs(asType)：查询数据，并直接转换为 vo、dto 等</li><li>oneWithRelations：查询一条数据及其关联数据</li><li>oneWithRelationsAs：查询一条数据及其关联数据，并直接转换为 vo、dto 等</li><li>oneOpt：返回 Optional 类型，获取一条数据</li><li>oneAsOpt(asType)：返回 Optional 类型，查询数据，并直接转换为 vo、dto 等</li><li>oneWithRelationsOpt：返回 Optional 类型，查询一条数据及其关联数据</li><li>oneWithRelationsAsOpt：返回 Optional 类型，查询一条数据及其关联数据，并直接转换为 vo、dto 等</li></ul><h3 id="list-系列方法" tabindex="-1"><a class="header-anchor" href="#list-系列方法"><span><code>list()</code> 系列方法</span></a></h3><ul><li>list()：查询数据列表</li><li>listWithRelations()：查询数据列表及其关联数据</li><li>listAs()：查询数据列表，并直接转换为 vo、dto 等</li><li>listWithRelationsAs()：查询数据列表，及其关联数据，并直接转换为 vo、dto 等</li></ul><h3 id="page-系列方法" tabindex="-1"><a class="header-anchor" href="#page-系列方法"><span><code>page()</code> 系列方法</span></a></h3><ul><li>page(page)：分页查询数据列表</li><li>pageAs(page)：分页查询数据列表，并直接转换为 vo、dto 等</li></ul><h3 id="obj-系列方法" tabindex="-1"><a class="header-anchor" href="#obj-系列方法"><span><code>obj()</code> 系列方法</span></a></h3><ul><li>obj()：查询第一列，且第一条数据</li><li>objAs(asType)：查询第一列，且第一条数据并转换为指定类型，比如 Long, String 等</li><li>objOpt()：返回 Optional 类型，查询第一列，且第一条数据</li><li>objAsOpt(asType)：返回 Optional 类型，查询第一列，且第一条数据并转换为指定类型，比如 Long, String 等</li></ul><h3 id="objlist-系列方法" tabindex="-1"><a class="header-anchor" href="#objlist-系列方法"><span><code>objList()</code> 系列方法</span></a></h3><ul><li>objList()：查询第一列</li><li>objListAs(asType)：查询第一列，并转换为指定类型，比如 Long, String 等</li></ul><h2 id="代码实战示例" tabindex="-1"><a class="header-anchor" href="#代码实战示例"><span>代码实战示例</span></a></h2><h3 id="示例-1-查询-entity-列表" tabindex="-1"><a class="header-anchor" href="#示例-1-查询-entity-列表"><span>示例 1：查询 Entity 列表</span></a></h3><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>List&lt;Article&gt; articles = articleService.queryChain()</span></span>
<span class="line"><span>    .select(ARTICLE.ALL_COLUMNS)</span></span>
<span class="line"><span>    .from(ARTICLE)</span></span>
<span class="line"><span>    .where(ARTICLE.ID.ge(100))</span></span>
<span class="line"><span>    .list();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-2-查询-1-条-entity-数据" tabindex="-1"><a class="header-anchor" href="#示例-2-查询-1-条-entity-数据"><span>示例 2：查询 1 条 Entity 数据</span></a></h3><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Article article = articleService.queryChain()</span></span>
<span class="line"><span>    .select(ARTICLE.ALL_COLUMNS)</span></span>
<span class="line"><span>    .from(ARTICLE)</span></span>
<span class="line"><span>    .where(ARTICLE.ID.ge(100))</span></span>
<span class="line"><span>    .limit(1)</span></span>
<span class="line"><span>    .one();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-3-查询-vo-数据-articlevo" tabindex="-1"><a class="header-anchor" href="#示例-3-查询-vo-数据-articlevo"><span>示例 3：查询 VO 数据（ArticleVo）</span></a></h3><p>ArticleVo.java</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>public class ArticleVo {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span>    private Long accountId;</span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    private String content;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //评论量最多的内容</span></span>
<span class="line"><span>    private Long maxComments;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //getter setter</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询代码：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ArticleVo articleVo = articleService.queryChain()</span></span>
<span class="line"><span>    .select(</span></span>
<span class="line"><span>        ARTICLE.ALL_COLUMNS,</span></span>
<span class="line"><span>        max(ARTICLE.comments).as(ArticleVo::maxComments)</span></span>
<span class="line"><span>    ).from(ARTICLE)</span></span>
<span class="line"><span>    .where(ARTICLE.ID.ge(100))</span></span>
<span class="line"><span>    .limit(1)</span></span>
<span class="line"><span>    .oneAs(ArticleVo.class);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-4-多对多关联查询-vo-数据-articlevo" tabindex="-1"><a class="header-anchor" href="#示例-4-多对多关联查询-vo-数据-articlevo"><span>示例 4：多对多关联查询 VO 数据（ArticleVo）</span></a></h3><p>ArticleVo.java 及其 <strong>文章分类</strong> 定义：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>public class ArticleVo {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span>    private Long accountId;</span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    private String content;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //文章和分类的 多对多 关系配置</span></span>
<span class="line"><span>    @RelationManyToMany(</span></span>
<span class="line"><span>        joinTable = &quot;tb_article_category_mapping&quot;, // 中间表</span></span>
<span class="line"><span>        selfField = &quot;id&quot;, joinSelfColumn = &quot;article_id&quot;,</span></span>
<span class="line"><span>        targetField = &quot;id&quot;, joinTargetColumn = &quot;category_id&quot;</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>    private List&lt;ArticleCategory&gt; categories;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //getter setter</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询代码：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ArticleVo articleVo = articleService.queryChain()</span></span>
<span class="line"><span>    .select()</span></span>
<span class="line"><span>    .from(ARTICLE)</span></span>
<span class="line"><span>    .where(ARTICLE.ID.ge(100))</span></span>
<span class="line"><span>    .limit(1)</span></span>
<span class="line"><span>    .oneWithRelationsAs(ArticleVo.class);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>通过 <code>oneWithRelationsAs</code> 方法查询 <code>ArticleVo</code> 及其关联数据（多对多的文章分类）。 更多关于关联查询的内容请参考章节：<a href="https://mybatis-flex.com/zh/base/relations-query.html" target="_blank" rel="noopener noreferrer">《关联查询》</a>。</p></blockquote><h2 id="dbchain-示例" tabindex="-1"><a class="header-anchor" href="#dbchain-示例"><span>DbChain 示例</span></a></h2><p>使用 <code>DbChain</code> 之后无需将 <code>QueryWrapper</code> 与 <code>Row</code> 的构建分离，直接即可进行操作。</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>// 新增 Row 构建</span></span>
<span class="line"><span>DbChain.table(&quot;tb_account&quot;)</span></span>
<span class="line"><span>    .setId(RowKey.AUTO)</span></span>
<span class="line"><span>    .set(&quot;user_name&quot;, &quot;zhang san&quot;)</span></span>
<span class="line"><span>    .set(&quot;age&quot;, 18)</span></span>
<span class="line"><span>    .set(&quot;birthday&quot;, new Date())</span></span>
<span class="line"><span>    .save();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 查询 QueryWrapper 构建</span></span>
<span class="line"><span>DbChain.table(&quot;tb_account&quot;)</span></span>
<span class="line"><span>    .select(&quot;id&quot;, &quot;user_name&quot;, &quot;age&quot;, &quot;birthday&quot;)</span></span>
<span class="line"><span>    .where(&quot;age &gt; ?&quot;, 18)</span></span>
<span class="line"><span>    .list()</span></span>
<span class="line"><span>    .forEach(System.out::println);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61)]))}const t=a(l,[["render",p]]),r=JSON.parse('{"path":"/framework/mybatisflex/fssufjr2/","title":"MyBatis-Flex链式操作","lang":"zh-CN","frontmatter":{"title":"MyBatis-Flex链式操作","createTime":"2025/08/26 17:24:30","permalink":"/framework/mybatisflex/fssufjr2/"},"readingTime":{"minutes":3.7,"words":1109},"git":{"createdTime":1756736713000},"filePathRelative":"notes/framework/mybatisflex/base/链式操作.md","headers":[]}');export{t as comp,r as data};
