import{a,c as n,b as i,o as l}from"./app-ZQgO6-gU.js";const s={};function o(c,e){return l(),n("div",null,e[0]||(e[0]=[i(`<p>SpringBoot 配置文件（<code>application.yml</code> 等）；Solon 配置文件（<code>app.yml</code> 等）。主要是用于对 MyBatis 原生以及 MyBatis-Flex 的 <code>FlexGlobalConfig</code> 进行配置。</p><p>示例如下：</p><p>yaml</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>mybatis-flex:</span></span>
<span class="line"><span>  #......</span></span>
<span class="line"><span>  datasource:</span></span>
<span class="line"><span>    #......</span></span>
<span class="line"><span>  configuration:</span></span>
<span class="line"><span>    #......</span></span>
<span class="line"><span>  global-config:</span></span>
<span class="line"><span>    #......</span></span>
<span class="line"><span>  admin-config:</span></span>
<span class="line"><span>    #......</span></span>
<span class="line"><span>  seata-config:</span></span>
<span class="line"><span>    #......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mybatis-flex" tabindex="-1"><a class="header-anchor" href="#mybatis-flex"><span>mybatis-flex</span></a></h2><h3 id="datasource" tabindex="-1"><a class="header-anchor" href="#datasource"><span>datasource</span></a></h3><ul><li>类型：<code>Map&lt;String, Map&lt;String, String&gt;&gt;</code></li><li>默认值：<code>null</code></li></ul><p>MyBatis-Flex 多数据源配置，参考 [多数据源配置](../core/multi-datasource.md#更多的 Spring 或 Solon Yaml 配置支持)。</p><h3 id="config-location" tabindex="-1"><a class="header-anchor" href="#config-location"><span>config-location</span></a></h3><ul><li>类型：<code>String</code></li><li>默认值：<code>null</code></li></ul><p>MyBatis 配置文件位置，如果有单独的 MyBatis 配置，需要将其路径配置到 <code>configLocation</code> 中。MyBatis Configuration 的具体内容请参考 <a href="https://www.mybatis.org/mybatis-3/zh_CN/configuration.html" target="_blank" rel="noopener noreferrer">MyBatis 官方文档</a>。</p><h3 id="mapper-locations" tabindex="-1"><a class="header-anchor" href="#mapper-locations"><span>mapper-locations</span></a></h3><ul><li>类型：<code>String[]</code></li><li>默认值：<code>[&quot;classpath*:/mapper/**/*.xml&quot;]</code></li></ul><p>MyBatis Mapper 所对应的 XML 文件位置，如果在 Mapper 中有自定义的方法（XML 中有自定义的实现），需要进行该配置，指定 Mapper 所对应的 XML 文件位置。</p><h3 id="type-aliases-package" tabindex="-1"><a class="header-anchor" href="#type-aliases-package"><span>type-aliases-package</span></a></h3><ul><li>类型：<code>String</code></li><li>默认值：<code>null</code></li></ul><p>MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。</p><h3 id="type-aliases-super-type" tabindex="-1"><a class="header-anchor" href="#type-aliases-super-type"><span>type-aliases-super-type</span></a></h3><ul><li>类型：<code>Class&lt;?&gt;</code></li><li>默认值：<code>null</code></li></ul><p>该配置请和 <a href="https://mybatis-flex.com/zh/base/configuration.html#type-aliases-package" target="_blank" rel="noopener noreferrer">typeAliasesPackage</a> 一起使用，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象。</p><h3 id="type-handlers-package" tabindex="-1"><a class="header-anchor" href="#type-handlers-package"><span>type-handlers-package</span></a></h3><ul><li>类型：<code>String</code></li><li>默认值：<code>null</code></li></ul><p>TypeHandler 扫描路径，如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler 处理器。</p><h3 id="check-config-location" tabindex="-1"><a class="header-anchor" href="#check-config-location"><span>check-config-location</span></a></h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>启动时检查是否存在 MyBatis XML 文件，默认不检查。</p><h3 id="executor-type" tabindex="-1"><a class="header-anchor" href="#executor-type"><span>executor-type</span></a></h3><ul><li>类型：<code>ExecutorType</code></li><li>默认值：<code>simple</code></li></ul><p>通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：</p><ul><li><code>ExecutorType.SIMPLE</code>：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）。</li><li><code>ExecutorType.REUSE</code>：该执行器类型会复用预处理语句（PreparedStatement）。</li><li><code>ExecutorType.BATCH</code>：该执行器类型会批量执行所有的更新语句。</li></ul><h3 id="defaults-scripting-language-driver" tabindex="-1"><a class="header-anchor" href="#defaults-scripting-language-driver"><span>defaults-scripting-language-driver</span></a></h3><ul><li>类型：<code>Class&lt;? extends LanguageDriver&gt;</code></li><li>默认值：<code>null</code></li></ul><p>指定默认的脚本语言驱动器。</p><h3 id="configuration-properties" tabindex="-1"><a class="header-anchor" href="#configuration-properties"><span>configuration-properties</span></a></h3><ul><li>类型：<code>Properties</code></li><li>默认值：<code>null</code></li></ul><p>指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署。</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>configuration</span></a></h2><p>本部分（Configuration）的配置都为 MyBatis 原生支持的配置，有关配置请参考 <a href="https://mybatis.org/mybatis-3/zh_CN/configuration.html#%E8%AE%BE%E7%BD%AE%EF%BC%88settings%EF%BC%89" target="_blank" rel="noopener noreferrer">MyBatis Configuration</a>。</p><h2 id="global-config" tabindex="-1"><a class="header-anchor" href="#global-config"><span>global-config</span></a></h2><h3 id="print-banner" tabindex="-1"><a class="header-anchor" href="#print-banner"><span>print-banner</span></a></h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>true</code></li></ul><p>是否控制台打印 MyBatis-Flex 的 LOGO 及版本号。</p><h3 id="key-config" tabindex="-1"><a class="header-anchor" href="#key-config"><span>key-config</span></a></h3><ul><li>类型：<code>com.mybatisflex.core.FlexGlobalConfig.KeyConfig</code></li><li>默认值：<code>null</code></li></ul><p>全局的 ID 生成策略配置，当 <code>@Id</code> 未配置或者配置 <code>KeyType</code> 为 <code>None</code> 时 使用当前全局配置。</p><h3 id="normal-value-of-logic-delete" tabindex="-1"><a class="header-anchor" href="#normal-value-of-logic-delete"><span>normal-value-of-logic-delete</span></a></h3><ul><li>类型：<code>java.lang.Object</code></li><li>默认值：<code>0</code></li></ul><p>逻辑删除数据存在标记值。</p><h3 id="deleted-value-of-logic-delete" tabindex="-1"><a class="header-anchor" href="#deleted-value-of-logic-delete"><span>deleted-value-of-logic-delete</span></a></h3><ul><li>类型：<code>java.lang.Object</code></li><li>默认值：<code>1</code></li></ul><p>逻辑删除数据删除标记值。</p><h3 id="logic-delete-column" tabindex="-1"><a class="header-anchor" href="#logic-delete-column"><span>logic-delete-column</span></a></h3><ul><li>类型：<code>java.lang.String</code></li><li>默认值：<code>del_flag</code></li></ul><p>默认的逻辑删除字段。</p><h3 id="tenant-column" tabindex="-1"><a class="header-anchor" href="#tenant-column"><span>tenant-column</span></a></h3><ul><li>类型：<code>java.lang.String</code></li><li>默认值：<code>tenant_id</code></li></ul><p>默认的多租户字段。</p><h3 id="version-column" tabindex="-1"><a class="header-anchor" href="#version-column"><span>version-column</span></a></h3><ul><li>类型：<code>java.lang.String</code></li><li>默认值：<code>version</code></li></ul><p>默认的乐观锁字段。</p><h2 id="admin-config" tabindex="-1"><a class="header-anchor" href="#admin-config"><span>admin-config</span></a></h2><p>通过对 admin-config 的配置，可以把当前应用执行的 SQL，发送到 <strong>MyBatis-Flex-Admin</strong> 进行审计，详情点击 <a href="https://mybatis-flex.com/zh/awesome-things.html#mybatis-flex-admin" target="_blank" rel="noopener noreferrer">这里</a>。</p><h3 id="enable" tabindex="-1"><a class="header-anchor" href="#enable"><span>enable</span></a></h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>是否启用 MyBatis-Flex-Admin 连接。</p><h3 id="endpoint" tabindex="-1"><a class="header-anchor" href="#endpoint"><span>endpoint</span></a></h3><ul><li>类型：<code>String</code></li><li>默认值：<code>null</code></li></ul><p>MyBatis-Flex-Admin 连接端点。</p><h3 id="secret-key" tabindex="-1"><a class="header-anchor" href="#secret-key"><span>secret-key</span></a></h3><ul><li>类型：<code>String</code></li><li>默认值：<code>null</code></li></ul><p>MyBatis-Flex-Admin 连接密钥。</p><hr><p>示例代码：</p><p>yaml</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>mybatis-flex:</span></span>
<span class="line"><span>  admin-config:</span></span>
<span class="line"><span>    enable: true</span></span>
<span class="line"><span>    endpoint: http://admin-host:8080/message/collect</span></span>
<span class="line"><span>    secret-key: secretKey</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>secret-key 配置的内容，必须要和 MyBatis-Flex-Admin 项目配置的 <code>mybatis-flex.admin.message-secret-key</code> 完全一致，才能正常收集 SQL 执行日志。</p></blockquote><h2 id="seata-config" tabindex="-1"><a class="header-anchor" href="#seata-config"><span>seata-config</span></a></h2><h3 id="enable-1" tabindex="-1"><a class="header-anchor" href="#enable-1"><span>enable</span></a></h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>是否启用 Seata 代理数据源。</p><h3 id="seata-mode" tabindex="-1"><a class="header-anchor" href="#seata-mode"><span>seata-mode</span></a></h3><ul><li>类型：<code>com.mybatisflex.spring.boot.MybatisFlexProperties.SeataMode</code>，或者 <code>com.mybatisflex.solon.MybatisFlexProperties.SeataMode</code></li><li>默认值：<code>AT</code></li></ul><p>使用 Seata AT 模式代理数据源。</p>`,83)]))}const t=a(s,[["render",o]]),r=JSON.parse('{"path":"/framework/mybatisflex/base/b7738a1q/","title":"SpringBoot的配置文件","lang":"zh-CN","frontmatter":{"title":"SpringBoot的配置文件","createTime":"2025/08/27 09:26:58","permalink":"/framework/mybatisflex/base/b7738a1q/"},"readingTime":{"minutes":3.32,"words":995},"git":{"createdTime":1756736713000},"filePathRelative":"notes/framework/mybatisflex/base/SpringBoot的配置文件.md","headers":[]}');export{t as comp,r as data};
