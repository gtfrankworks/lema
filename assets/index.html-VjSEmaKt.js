import{a as e,c as n,b as a,o as i}from"./app-ZQgO6-gU.js";const l={};function p(d,s){return i(),n("div",null,s[0]||(s[0]=[a(`<p>数据填充指的是，当 Entity 数据被插入 或者 更新的时候，会为字段进行一些默认的数据设置。这个非常有用，比如当某个 entity 被插入时候 会设置一些数据插入的时间、数据插入的用户 id，多租户的场景下设置当前租户信息等等。</p><p>MyBatis-Flex 提供了两种方式，帮助开发者进行数据填充。</p><ul><li>1、通过 <code>@Table</code> 注解的 <code>onInsert</code> 和 <code>onUpdate</code> 配置进行操作。这部分可以参考 <a href="https://mybatis-flex.com/zh/core/table.html" target="_blank" rel="noopener noreferrer">@Table 注解章节</a> 。</li><li>2、通过 <code>@Column</code> 注解的 <code>onInsertValue</code> 和 <code>onUpdateValue</code> 配置进行操作。这部分可以参考 <a href="https://mybatis-flex.com/zh/core/column.html" target="_blank" rel="noopener noreferrer">@Column 注解章节</a>。</li></ul><h2 id="疑惑点" tabindex="-1"><a class="header-anchor" href="#疑惑点"><span>疑惑点</span></a></h2><p><strong>1、<code>@Table</code> 注解的 <code>onInsert</code> 和 <code>@Column</code> 注解的 <code>onInsertValue</code> 有什么区别？</strong></p><p>答：<code>@Table</code> 注解的 <code>onInsert</code> 主要是在 Java 应用层面进行数据设置，而 <code>@Column</code> 注解的 <code>onInsertValue</code> 则是在数据库层面进行数据设置。</p><p>例如：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@Table(&quot;tb_article&quot;)</span></span>
<span class="line"><span>public class Article {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Id(keyType = KeyType.Auto)</span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    @Column(onInsertValue = &quot;now()&quot;)</span></span>
<span class="line"><span>    private Date created;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当数据被插入时，其执行的 Sql 如下：</p><p>sql</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>INSERT INTO \`tb_article\`(title, created)</span></span>
<span class="line"><span>VALUES (?, now())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>@Column(onInsertValue = &quot;now()&quot;)</code> 中的 <code>now()</code> 是 Sql 的一部分（一个函数），我们可以配置更加复杂，例如：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@Table(&quot;tb_article&quot;)</span></span>
<span class="line"><span>public class Article {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Id(keyType = KeyType.Auto)</span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    @Column(onUpdateValue = &quot;version + 1&quot;)</span></span>
<span class="line"><span>    private int version;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当数据被 update 的时候，其执行的 sql 如下：</p><p>sql</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>update tb_article set title = ?,version = version + 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更复杂的场景，我们可以配置如下：</p><p>java</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>@Table(&quot;tb_article&quot;)</span></span>
<span class="line"><span>public class Article {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Id(keyType = KeyType.Auto)</span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    @Column(onUpdateValue = &quot;(select xxx from other_table where ...)&quot;)</span></span>
<span class="line"><span>    private int version;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const c=e(l,[["render",p]]),r=JSON.parse('{"path":"/framework/mybatisflex/ad/5fmsmqce/","title":"数据填充","lang":"zh-CN","frontmatter":{"title":"数据填充","createTime":"2025/08/27 09:44:45","permalink":"/framework/mybatisflex/ad/5fmsmqce/"},"readingTime":{"minutes":1.36,"words":407},"git":{"createdTime":1756736713000},"filePathRelative":"notes/framework/mybatisflex/ad/数据填充.md","headers":[]}');export{c as comp,r as data};
